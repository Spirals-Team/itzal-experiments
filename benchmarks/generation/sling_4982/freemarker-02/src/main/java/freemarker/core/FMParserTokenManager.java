/* Generated By:JavaCC: Do not edit this line. FMParserTokenManager.java */
package freemarker.core;
import freemarker.template.*;
import freemarker.template.utility.StringUtil;
import freemarker.template.utility.DeepUnwrap;
import java.io.*;
import java.util.*;

class FMParserTokenManager implements FMParserConstants
{
/**
  The noparseTag is set when we enter
  a block of text that the parser more or less ignores.
  These are <noparse> and <comment>. This variable
  tells us what the closing tag should be, and when
  we hit that, we resume parsing. Note that with this
  scheme, <comment> and <noparse> tags cannot nest
  recursively, but it is not clear how important that is.
*/
    String noparseTag;

/**
    Keeps track of how deeply nested
    we have the hash literals.
    This is necessary since we need to be
    able to distinguish the } used to close
    a hash literal and the one used to
    close a ${
 */
 private int hashLiteralNesting;
 private int parenthesisNesting;
 private boolean inFTLHeader;
 boolean strictEscapeSyntax, onlyTextOutput;
 String templateName;

 // This method checks if we are in a strict mode where all
 // FreeMarker directives must start with <#

 private void strictSyntaxCheck(Token tok, int newLexState) {
     if (onlyTextOutput || (strictEscapeSyntax
         && !tok.image.startsWith("<#")
         && !tok.image.startsWith("</#")))
     {
        tok.kind = PRINTABLE_CHARS;
     }
     else {
        SwitchTo(newLexState);
     }
 }

 private void eatNewline() {
     int charsRead = 0;
     try {
        while (true) {
           char c = input_stream.readChar();
           ++charsRead;
           if (!Character.isWhitespace(c)) {
              input_stream.backup(charsRead);
           } else if (c=='\r') {
              char next = input_stream.readChar();
              ++charsRead;
              if (next != '\n') {
                 input_stream.backup(1);
              }
              return;
           } else if (c=='\n') {
              return;
           }
        }
     } catch (IOException ioe) {
        input_stream.backup(charsRead);
     }
 }
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_6(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x2000000000000000L) != 0L)
         {
            jjmatchedKind = 128;
            return -1;
         }
         return -1;
      case 1:
         if ((active1 & 0x2000000000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 128;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_6(int pos, long active0, long active1)
{
   return jjMoveNfa_6(jjStopStringLiteralDfa_6(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_6(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_6(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_6()
{
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa1_6(0x2000000000000000L);
      default :
         return jjMoveNfa_6(5, 0);
   }
}
private final int jjMoveStringLiteralDfa1_6(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_6(active1, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_6(0, 0L, active1);
}
private final int jjMoveStringLiteralDfa2_6(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(0, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x2000000000000000L) != 0L)
            return jjStopAtPos(2, 125);
         break;
      default :
         break;
   }
   return jjStartNfa_6(1, 0L, active1);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_6(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 8;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0xefffdfffffffffffL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     jjCheckNAdd(6);
                  }
                  else if ((0x1000200000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                  }
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 0:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if (curChar == 35)
                     jjCheckNAdd(2);
                  break;
               case 3:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(0, 1);
                  break;
               case 4:
                  if (curChar == 62 && kind > 126)
                     kind = 126;
                  break;
               case 6:
                  if ((0xefffdfffffffffffL & l) == 0L)
                     break;
                  if (kind > 127)
                     kind = 127;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if ((0x1000200000000000L & l) != 0L && kind > 128)
                     kind = 128;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 6:
                  if (kind > 127)
                     kind = 127;
                  jjCheckNAdd(6);
                  break;
               case 2:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjAddStates(2, 4);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 6:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 127)
                     kind = 127;
                  jjCheckNAdd(6);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 8 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0xc0L) != 0L)
         {
            jjmatchedKind = 69;
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0, long active1)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0, active1), pos + 1);
}
private final int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa1_1(0x80L);
      case 36:
         return jjMoveStringLiteralDfa1_1(0x40L);
      default :
         return jjMoveNfa_1(2, 0);
   }
}
private final int jjMoveStringLiteralDfa1_1(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 123:
         if ((active1 & 0x40L) != 0L)
            return jjStopAtPos(1, 70);
         else if ((active1 & 0x80L) != 0L)
            return jjStopAtPos(1, 71);
         break;
      default :
         break;
   }
   return jjStartNfa_1(0, 0L, active1);
}
private final int jjMoveNfa_1(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0xefffffe6ffffd9ffL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(1);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(0);
                  }
                  else if ((0x1800000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjstateSet[jjnewStateCnt++] = 4;
                  }
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAdd(0);
                  break;
               case 1:
                  if ((0xefffffe6ffffd9ffL & l) == 0L)
                     break;
                  kind = 68;
                  jjCheckNAdd(1);
                  break;
               case 3:
                  if (curChar != 60)
                     break;
                  kind = 69;
                  jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 5:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0xffffffff7fffffffL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 69)
                        kind = 69;
                  }
                  break;
               case 1:
                  if ((0xffffffff7fffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(1);
                  break;
               case 4:
                  if (curChar == 64)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 2:
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x4000000020000000L) != 0L)
         {
            jjmatchedKind = 69;
            return 4;
         }
         if ((active1 & 0xc0L) != 0L)
         {
            jjmatchedKind = 69;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x4000000000000000L) != 0L)
            return 350;
         if ((active1 & 0xc0L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 0;
            }
            return -1;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 0;
            }
            return 507;
         }
         return -1;
      case 2:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80L);
      case 36:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40L);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x4000000020000000L, 0x0L);
      default :
         return jjMoveNfa_0(2, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000L, active1, 0L);
      case 64:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 62, 350);
         break;
      case 123:
         if ((active1 & 0x40L) != 0L)
            return jjStopAtPos(1, 70);
         else if ((active1 & 0x80L) != 0L)
            return jjStopAtPos(1, 71);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(3, 29);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
static final long[] jjbitVec3 = {
   0x1ff00000fffffffeL, 0xffffffffffffc000L, 0xffffffffL, 0x600000000000000L
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec5 = {
   0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec6 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffL, 0x0L
};
static final long[] jjbitVec7 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x0L, 0x0L
};
static final long[] jjbitVec8 = {
   0x3fffffffffffL, 0x0L, 0x0L, 0x0L
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 515;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 348;
                  else if (curChar == 47)
                     jjCheckNAdd(347);
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 513;
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 495;
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 507;
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(484, 494);
                  if (curChar == 35)
                     jjCheckNAdd(345);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(474, 482);
                  if (curChar == 35)
                     jjCheckNAdd(334);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(464, 472);
                  if (curChar == 35)
                     jjCheckNAdd(326);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(451, 462);
                  if (curChar == 35)
                     jjCheckNAdd(314);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(439, 449);
                  if (curChar == 35)
                     jjCheckNAdd(305);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(430, 437);
                  if (curChar == 35)
                     jjCheckNAdd(294);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(418, 428);
                  if (curChar == 35)
                     jjCheckNAdd(286);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(408, 416);
                  if (curChar == 35)
                     jjCheckNAdd(276);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(398, 406);
                  if (curChar == 35)
                     jjCheckNAdd(266);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(389, 396);
                  if (curChar == 35)
                     jjCheckNAdd(260);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(378, 387);
                  if (curChar == 35)
                     jjCheckNAdd(254);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(367, 376);
                  if (curChar == 35)
                     jjCheckNAdd(245);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(359, 365);
                  if (curChar == 35)
                     jjCheckNAdd(243);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(353, 357);
                  if (curChar == 35)
                     jjCheckNAdd(234);
                  if (curChar == 35)
                     jjCheckNAdd(226);
                  if (curChar == 35)
                     jjCheckNAdd(216);
                  if (curChar == 35)
                     jjCheckNAdd(207);
                  if (curChar == 35)
                     jjCheckNAdd(199);
                  if (curChar == 35)
                     jjCheckNAdd(189);
                  if (curChar == 35)
                     jjCheckNAdd(179);
                  if (curChar == 35)
                     jjCheckNAdd(168);
                  if (curChar == 35)
                     jjCheckNAdd(159);
                  if (curChar == 35)
                     jjCheckNAdd(153);
                  if (curChar == 35)
                     jjCheckNAdd(145);
                  if (curChar == 35)
                     jjCheckNAdd(139);
                  if (curChar == 35)
                     jjCheckNAdd(132);
                  if (curChar == 35)
                     jjCheckNAdd(121);
                  if (curChar == 35)
                     jjCheckNAdd(114);
                  if (curChar == 35)
                     jjCheckNAdd(104);
                  if (curChar == 35)
                     jjCheckNAdd(96);
                  if (curChar == 35)
                     jjCheckNAdd(87);
                  if (curChar == 35)
                     jjCheckNAdd(80);
                  if (curChar == 35)
                     jjCheckNAdd(72);
                  if (curChar == 35)
                     jjCheckNAdd(64);
                  if (curChar == 35)
                     jjCheckNAdd(58);
                  if (curChar == 35)
                     jjCheckNAdd(50);
                  if (curChar == 35)
                     jjCheckNAdd(41);
                  if (curChar == 35)
                     jjCheckNAdd(35);
                  if (curChar == 35)
                     jjCheckNAdd(27);
                  if (curChar == 35)
                     jjCheckNAdd(23);
                  if (curChar == 35)
                     jjCheckNAdd(13);
                  break;
               case 2:
                  if ((0xefffffe6ffffd9ffL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(1);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(0);
                  }
                  else if ((0x1800000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                  }
                  else if (curChar == 60)
                     jjAddStates(5, 21);
                  if (curChar == 60)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAddStates(22, 106);
                  }
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAdd(0);
                  break;
               case 1:
                  if ((0xefffffe6ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(1);
                  break;
               case 3:
                  if (curChar != 60)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(22, 106);
                  break;
               case 6:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(107, 108);
                  break;
               case 7:
                  if (curChar == 62 && kind > 6)
                     kind = 6;
                  break;
               case 14:
                  if (curChar == 35)
                     jjCheckNAdd(23);
                  break;
               case 16:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(109, 110);
                  break;
               case 17:
                  if (curChar == 62 && kind > 7)
                     kind = 7;
                  break;
               case 24:
                  if (curChar == 35)
                     jjCheckNAdd(27);
                  break;
               case 26:
                  if ((0x100002600L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 28:
                  if (curChar == 35)
                     jjCheckNAdd(35);
                  break;
               case 30:
                  if ((0x100002600L & l) != 0L && kind > 9)
                     kind = 9;
                  break;
               case 36:
                  if (curChar == 35)
                     jjCheckNAdd(41);
                  break;
               case 38:
                  if ((0x100002600L & l) != 0L && kind > 10)
                     kind = 10;
                  break;
               case 42:
                  if (curChar == 35)
                     jjCheckNAdd(50);
                  break;
               case 44:
                  if ((0x100002600L & l) != 0L && kind > 11)
                     kind = 11;
                  break;
               case 51:
                  if (curChar == 35)
                     jjCheckNAdd(58);
                  break;
               case 53:
                  if ((0x100002600L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 59:
                  if (curChar == 35)
                     jjCheckNAdd(64);
                  break;
               case 61:
                  if ((0x100002600L & l) != 0L && kind > 13)
                     kind = 13;
                  break;
               case 65:
                  if (curChar == 35)
                     jjCheckNAdd(72);
                  break;
               case 67:
                  if ((0x100002600L & l) != 0L && kind > 14)
                     kind = 14;
                  break;
               case 73:
                  if (curChar == 35)
                     jjCheckNAdd(80);
                  break;
               case 75:
                  if ((0x100002600L & l) != 0L && kind > 15)
                     kind = 15;
                  break;
               case 81:
                  if (curChar == 35)
                     jjCheckNAdd(87);
                  break;
               case 83:
                  if ((0x100002600L & l) != 0L && kind > 16)
                     kind = 16;
                  break;
               case 88:
                  if (curChar == 35)
                     jjCheckNAdd(96);
                  break;
               case 90:
                  if ((0x100002600L & l) != 0L && kind > 17)
                     kind = 17;
                  break;
               case 97:
                  if (curChar == 35)
                     jjCheckNAdd(104);
                  break;
               case 99:
                  if ((0x100002600L & l) != 0L && kind > 18)
                     kind = 18;
                  break;
               case 105:
                  if (curChar == 35)
                     jjCheckNAdd(114);
                  break;
               case 107:
                  if ((0x100002600L & l) != 0L && kind > 19)
                     kind = 19;
                  break;
               case 115:
                  if (curChar == 35)
                     jjCheckNAdd(121);
                  break;
               case 117:
                  if ((0x100002600L & l) != 0L && kind > 20)
                     kind = 20;
                  break;
               case 122:
                  if (curChar == 35)
                     jjCheckNAdd(132);
                  break;
               case 124:
                  if ((0x100002600L & l) != 0L && kind > 21)
                     kind = 21;
                  break;
               case 133:
                  if (curChar == 35)
                     jjCheckNAdd(139);
                  break;
               case 135:
                  if ((0x100002600L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 140:
                  if (curChar == 35)
                     jjCheckNAdd(145);
                  break;
               case 142:
                  if ((0x100002600L & l) != 0L && kind > 23)
                     kind = 23;
                  break;
               case 146:
                  if (curChar == 35)
                     jjCheckNAdd(153);
                  break;
               case 148:
                  if ((0x100002600L & l) != 0L && kind > 24)
                     kind = 24;
                  break;
               case 154:
                  if (curChar == 35)
                     jjCheckNAdd(159);
                  break;
               case 156:
                  if ((0x100002600L & l) != 0L && kind > 25)
                     kind = 25;
                  break;
               case 160:
                  if (curChar == 35)
                     jjCheckNAdd(168);
                  break;
               case 162:
                  if ((0x100002600L & l) != 0L && kind > 26)
                     kind = 26;
                  break;
               case 169:
                  if (curChar == 35)
                     jjCheckNAdd(179);
                  break;
               case 171:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(111, 112);
                  break;
               case 172:
                  if (curChar == 62 && kind > 27)
                     kind = 27;
                  break;
               case 180:
                  if (curChar == 35)
                     jjCheckNAdd(189);
                  break;
               case 182:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(113, 114);
                  break;
               case 183:
                  if (curChar == 62 && kind > 28)
                     kind = 28;
                  break;
               case 190:
                  if (curChar == 35)
                     jjCheckNAdd(199);
                  break;
               case 192:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(115, 116);
                  break;
               case 193:
                  if (curChar == 62 && kind > 30)
                     kind = 30;
                  break;
               case 200:
                  if (curChar == 35)
                     jjCheckNAdd(207);
                  break;
               case 202:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(117, 119);
                  break;
               case 203:
                  if (curChar == 47)
                     jjCheckNAdd(204);
                  break;
               case 204:
                  if (curChar == 62 && kind > 43)
                     kind = 43;
                  break;
               case 208:
                  if (curChar == 35)
                     jjCheckNAdd(216);
                  break;
               case 210:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(120, 122);
                  break;
               case 211:
                  if (curChar == 47)
                     jjCheckNAdd(212);
                  break;
               case 212:
                  if (curChar == 62 && kind > 44)
                     kind = 44;
                  break;
               case 217:
                  if (curChar == 35)
                     jjCheckNAdd(226);
                  break;
               case 219:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(123, 125);
                  break;
               case 220:
                  if (curChar == 47)
                     jjCheckNAdd(221);
                  break;
               case 221:
                  if (curChar == 62 && kind > 45)
                     kind = 45;
                  break;
               case 227:
                  if (curChar == 35)
                     jjCheckNAdd(234);
                  break;
               case 229:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(126, 128);
                  break;
               case 230:
                  if (curChar == 47)
                     jjCheckNAdd(231);
                  break;
               case 231:
                  if (curChar == 62 && kind > 46)
                     kind = 46;
                  break;
               case 235:
                  if (curChar == 35)
                     jjCheckNAdd(243);
                  break;
               case 237:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(129, 131);
                  break;
               case 238:
                  if (curChar == 47)
                     jjCheckNAdd(239);
                  break;
               case 239:
                  if (curChar == 62 && kind > 47)
                     kind = 47;
                  break;
               case 244:
                  if (curChar == 35)
                     jjCheckNAdd(245);
                  break;
               case 246:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(132, 134);
                  break;
               case 247:
                  if (curChar == 47)
                     jjCheckNAdd(248);
                  break;
               case 248:
                  if (curChar == 62 && kind > 48)
                     kind = 48;
                  break;
               case 249:
                  if (curChar == 35)
                     jjCheckNAdd(254);
                  break;
               case 251:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(135, 137);
                  break;
               case 252:
                  if (curChar == 47)
                     jjCheckNAdd(253);
                  break;
               case 253:
                  if (curChar == 62 && kind > 49)
                     kind = 49;
                  break;
               case 255:
                  if (curChar == 35)
                     jjCheckNAdd(260);
                  break;
               case 257:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 258:
                  if (curChar == 47)
                     jjCheckNAdd(259);
                  break;
               case 259:
                  if (curChar == 62 && kind > 50)
                     kind = 50;
                  break;
               case 261:
                  if (curChar == 35)
                     jjCheckNAdd(266);
                  break;
               case 263:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(141, 143);
                  break;
               case 264:
                  if (curChar == 47)
                     jjCheckNAdd(265);
                  break;
               case 265:
                  if (curChar == 62 && kind > 51)
                     kind = 51;
                  break;
               case 267:
                  if (curChar == 35)
                     jjCheckNAdd(276);
                  break;
               case 269:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(144, 145);
                  break;
               case 270:
                  if (curChar == 62 && kind > 52)
                     kind = 52;
                  break;
               case 277:
                  if (curChar == 35)
                     jjCheckNAdd(286);
                  break;
               case 279:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(146, 148);
                  break;
               case 280:
                  if (curChar == 47)
                     jjCheckNAdd(281);
                  break;
               case 281:
                  if (curChar == 62 && kind > 53)
                     kind = 53;
                  break;
               case 287:
                  if (curChar == 35)
                     jjCheckNAdd(294);
                  break;
               case 289:
                  if ((0x100002600L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 295:
                  if (curChar == 35)
                     jjCheckNAdd(305);
                  break;
               case 297:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(149, 151);
                  break;
               case 298:
                  if (curChar == 47)
                     jjCheckNAdd(299);
                  break;
               case 299:
                  if (curChar == 62 && kind > 55)
                     kind = 55;
                  break;
               case 306:
                  if (curChar == 35)
                     jjCheckNAdd(314);
                  break;
               case 308:
                  if ((0x100002600L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 315:
                  if (curChar == 35)
                     jjCheckNAdd(326);
                  break;
               case 317:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(152, 154);
                  break;
               case 318:
                  if (curChar == 47)
                     jjCheckNAdd(319);
                  break;
               case 319:
                  if (curChar == 62 && kind > 57)
                     kind = 57;
                  break;
               case 327:
                  if (curChar == 35)
                     jjCheckNAdd(334);
                  break;
               case 329:
                  if ((0x100002600L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 335:
                  if (curChar == 35)
                     jjCheckNAdd(345);
                  break;
               case 337:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(155, 156);
                  break;
               case 338:
                  if (curChar == 62 && kind > 60)
                     kind = 60;
                  break;
               case 346:
                  if (curChar == 47)
                     jjCheckNAdd(347);
                  break;
               case 347:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 351:
                  if (curChar == 60)
                     jjAddStates(5, 21);
                  break;
               case 352:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(353, 357);
                  break;
               case 353:
                  if (curChar == 35)
                     jjCheckNAdd(357);
                  break;
               case 355:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(157, 158);
                  break;
               case 356:
                  if (curChar == 62 && kind > 31)
                     kind = 31;
                  break;
               case 358:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(359, 365);
                  break;
               case 359:
                  if (curChar == 35)
                     jjCheckNAdd(365);
                  break;
               case 361:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(159, 160);
                  break;
               case 362:
                  if (curChar == 62 && kind > 32)
                     kind = 32;
                  break;
               case 366:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(367, 376);
                  break;
               case 367:
                  if (curChar == 35)
                     jjCheckNAdd(376);
                  break;
               case 369:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(161, 162);
                  break;
               case 370:
                  if (curChar == 62 && kind > 33)
                     kind = 33;
                  break;
               case 377:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(378, 387);
                  break;
               case 378:
                  if (curChar == 35)
                     jjCheckNAdd(387);
                  break;
               case 380:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(163, 164);
                  break;
               case 381:
                  if (curChar == 62 && kind > 34)
                     kind = 34;
                  break;
               case 388:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(389, 396);
                  break;
               case 389:
                  if (curChar == 35)
                     jjCheckNAdd(396);
                  break;
               case 391:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(165, 166);
                  break;
               case 392:
                  if (curChar == 62 && kind > 35)
                     kind = 35;
                  break;
               case 397:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(398, 406);
                  break;
               case 398:
                  if (curChar == 35)
                     jjCheckNAdd(406);
                  break;
               case 400:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(167, 168);
                  break;
               case 401:
                  if (curChar == 62 && kind > 36)
                     kind = 36;
                  break;
               case 407:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(408, 416);
                  break;
               case 408:
                  if (curChar == 35)
                     jjCheckNAdd(416);
                  break;
               case 410:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(169, 170);
                  break;
               case 411:
                  if (curChar == 62 && kind > 37)
                     kind = 37;
                  break;
               case 417:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(418, 428);
                  break;
               case 418:
                  if (curChar == 35)
                     jjCheckNAdd(428);
                  break;
               case 420:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(171, 172);
                  break;
               case 421:
                  if (curChar == 62 && kind > 38)
                     kind = 38;
                  break;
               case 429:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(430, 437);
                  break;
               case 430:
                  if (curChar == 35)
                     jjCheckNAdd(437);
                  break;
               case 432:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(173, 174);
                  break;
               case 433:
                  if (curChar == 62 && kind > 39)
                     kind = 39;
                  break;
               case 438:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(439, 449);
                  break;
               case 439:
                  if (curChar == 35)
                     jjCheckNAdd(449);
                  break;
               case 441:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(175, 176);
                  break;
               case 442:
                  if (curChar == 62 && kind > 40)
                     kind = 40;
                  break;
               case 450:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(451, 462);
                  break;
               case 451:
                  if (curChar == 35)
                     jjCheckNAdd(462);
                  break;
               case 453:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(177, 178);
                  break;
               case 454:
                  if (curChar == 62 && kind > 41)
                     kind = 41;
                  break;
               case 463:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(464, 472);
                  break;
               case 464:
                  if (curChar == 35)
                     jjCheckNAdd(472);
                  break;
               case 466:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(179, 180);
                  break;
               case 467:
                  if (curChar == 62 && kind > 42)
                     kind = 42;
                  break;
               case 473:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(474, 482);
                  break;
               case 474:
                  if (curChar == 35)
                     jjCheckNAdd(482);
                  break;
               case 476:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(181, 182);
                  break;
               case 477:
                  if (curChar == 62 && kind > 59)
                     kind = 59;
                  break;
               case 483:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(484, 494);
                  break;
               case 484:
                  if (curChar == 35)
                     jjCheckNAdd(494);
                  break;
               case 486:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(183, 184);
                  break;
               case 487:
                  if (curChar == 62 && kind > 61)
                     kind = 61;
                  break;
               case 496:
                  if (curChar == 36)
                     jjCheckNAddStates(185, 188);
                  break;
               case 497:
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddStates(185, 188);
                  break;
               case 498:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 499:
                  if (curChar == 36)
                     jjCheckNAddStates(189, 192);
                  break;
               case 500:
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddStates(189, 192);
                  break;
               case 501:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(501, 502);
                  break;
               case 502:
                  if (curChar == 62 && kind > 63)
                     kind = 63;
                  break;
               case 503:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 505:
                  if ((0x100002600L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 508:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 510:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 511:
                  if (curChar == 62 && kind > 65)
                     kind = 65;
                  break;
               case 514:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 507:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 66)
                        kind = 66;
                     jjCheckNAdd(348);
                  }
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 512;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 344;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 333;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 313;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 275;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 250;
                  else if (curChar == 116)
                     jjAddStates(132, 134);
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 233;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 215;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 188;
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 138;
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 120;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 103;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 79;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 71;
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 506;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 304;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 293;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 206;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 178;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 167;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 131;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 95;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 86;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 325;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 285;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 256;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 158;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 144;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 40;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 34;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 25;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 262;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 242;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 225;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 63;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 57;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 198;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 152;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 113;
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 49;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 4:
                  if (curChar == 64)
                     jjstateSet[jjnewStateCnt++] = 350;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 344;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 333;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 325;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 313;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 275;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 250;
                  else if (curChar == 116)
                     jjAddStates(132, 134);
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 233;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 215;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 188;
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 138;
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 120;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 103;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 79;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 71;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 304;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 293;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 242;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 206;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 178;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 167;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 131;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 95;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 86;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 285;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 256;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 158;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 144;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 113;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 40;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 34;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 25;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 262;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 225;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 63;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 49;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 198;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 152;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 2:
                  if ((0xffffffff7fffffffL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 69)
                        kind = 69;
                  }
                  break;
               case 1:
                  if ((0xffffffff7fffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(1);
                  break;
               case 5:
                  if (curChar == 116)
                     jjAddStates(107, 108);
                  break;
               case 8:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 9:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 15:
                  if (curChar == 114)
                     jjAddStates(109, 110);
                  break;
               case 18:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 19:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 25:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 27:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 29:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 31:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 32:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 37:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 39:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 40:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 43:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 45:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 46:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 52:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 54:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 55:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 60:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 62:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 63:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 66:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 68:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 69:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 74:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 76:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 77:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 82:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 84:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 85:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 89:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 91:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 92:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 98:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 100:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 101:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 106:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 108:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 109:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 116:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 119:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 123:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 125:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 126:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 134:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 136:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 137:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 141:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 143:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 144:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 147:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 149:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 150:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 155:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 157:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 158:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 161:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 163:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 164:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 170:
                  if (curChar == 115)
                     jjAddStates(111, 112);
                  break;
               case 173:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 174:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 181:
                  if (curChar == 116)
                     jjAddStates(113, 114);
                  break;
               case 184:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 185:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 191:
                  if (curChar == 101)
                     jjAddStates(115, 116);
                  break;
               case 194:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 195:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 201:
                  if (curChar == 101)
                     jjAddStates(117, 119);
                  break;
               case 205:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 206:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 209:
                  if (curChar == 107)
                     jjAddStates(120, 122);
                  break;
               case 213:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 214:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 218:
                  if (curChar == 110)
                     jjAddStates(123, 125);
                  break;
               case 222:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 223:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 228:
                  if (curChar == 112)
                     jjAddStates(126, 128);
                  break;
               case 232:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 233:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 236:
                  if (curChar == 104)
                     jjAddStates(129, 131);
                  break;
               case 240:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 241:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 245:
                  if (curChar == 116)
                     jjAddStates(132, 134);
                  break;
               case 250:
                  if (curChar == 116)
                     jjAddStates(135, 137);
                  break;
               case 254:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 256:
                  if (curChar == 116)
                     jjAddStates(138, 140);
                  break;
               case 260:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 262:
                  if (curChar == 116)
                     jjAddStates(141, 143);
                  break;
               case 266:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 268:
                  if (curChar == 116)
                     jjAddStates(144, 145);
                  break;
               case 271:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 272:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 278:
                  if (curChar == 100)
                     jjAddStates(146, 148);
                  break;
               case 282:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 283:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 288:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 290:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 291:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 296:
                  if (curChar == 101)
                     jjAddStates(149, 151);
                  break;
               case 300:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 301:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 307:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 309:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 310:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 316:
                  if (curChar == 107)
                     jjAddStates(152, 154);
                  break;
               case 320:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 321:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 328:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 330:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 331:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 336:
                  if (curChar == 101)
                     jjAddStates(155, 156);
                  break;
               case 339:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 340:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 348:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAdd(348);
                  break;
               case 349:
                  if (curChar == 64)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 354:
                  if (curChar == 102)
                     jjAddStates(157, 158);
                  break;
               case 357:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 360:
                  if (curChar == 116)
                     jjAddStates(159, 160);
                  break;
               case 363:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 364:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 368:
                  if (curChar == 114)
                     jjAddStates(161, 162);
                  break;
               case 371:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 372:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 379:
                  if (curChar == 104)
                     jjAddStates(163, 164);
                  break;
               case 382:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 383:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 390:
                  if (curChar == 108)
                     jjAddStates(165, 166);
                  break;
               case 393:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 394:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 399:
                  if (curChar == 108)
                     jjAddStates(167, 168);
                  break;
               case 402:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 403:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 409:
                  if (curChar == 110)
                     jjAddStates(169, 170);
                  break;
               case 412:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 413:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 419:
                  if (curChar == 110)
                     jjAddStates(171, 172);
                  break;
               case 422:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 423:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 428:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 431:
                  if (curChar == 111)
                     jjAddStates(173, 174);
                  break;
               case 434:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 435:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 440:
                  if (curChar == 115)
                     jjAddStates(175, 176);
                  break;
               case 443:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 444:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 452:
                  if (curChar == 109)
                     jjAddStates(177, 178);
                  break;
               case 455:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 456:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 459:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 465:
                  if (curChar == 104)
                     jjAddStates(179, 180);
                  break;
               case 468:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 469:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 475:
                  if (curChar == 101)
                     jjAddStates(181, 182);
                  break;
               case 478:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 479:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 485:
                  if (curChar == 101)
                     jjAddStates(183, 184);
                  break;
               case 488:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 489:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 490:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 491:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 492:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 493:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 495:
                  if (curChar == 64)
                     jjCheckNAddStates(193, 195);
                  break;
               case 496:
               case 497:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                     jjCheckNAddStates(185, 188);
                  break;
               case 499:
               case 500:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                     jjCheckNAddStates(189, 192);
                  break;
               case 504:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 506:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 509:
                  if (curChar == 108)
                     jjAddStates(196, 197);
                  break;
               case 512:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 513:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 2:
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(1);
                  break;
               case 496:
               case 497:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(185, 188);
                  break;
               case 499:
               case 500:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(189, 192);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 515 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x1c000000060000L) != 0L)
         {
            jjmatchedKind = 117;
            return 29;
         }
         return -1;
      case 1:
         if ((active1 & 0x10000000060000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 117;
               jjmatchedPos = 1;
            }
            return 29;
         }
         if ((active1 & 0xc000000000000L) != 0L)
            return 29;
         return -1;
      case 2:
         if ((active1 & 0x10000000060000L) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 2;
            return 29;
         }
         return -1;
      case 3:
         if ((active1 & 0x40000L) != 0L)
            return 29;
         if ((active1 & 0x10000000020000L) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 3;
            return 29;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1)
{
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1), pos + 1);
}
private final int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 33:
         jjmatchedKind = 104;
         return jjMoveStringLiteralDfa1_2(0x4000000L);
      case 37:
         return jjStopAtPos(0, 101);
      case 40:
         return jjStopAtPos(0, 110);
      case 41:
         return jjStopAtPos(0, 111);
      case 42:
         jjmatchedKind = 97;
         return jjMoveStringLiteralDfa1_2(0x400000000L);
      case 43:
         return jjStopAtPos(0, 95);
      case 44:
         return jjStopAtPos(0, 105);
      case 45:
         return jjStopAtPos(0, 96);
      case 46:
         jjmatchedKind = 85;
         return jjMoveStringLiteralDfa1_2(0x800400000L);
      case 47:
         jjmatchedKind = 100;
         return jjMoveStringLiteralDfa1_2(0x200000000000000L);
      case 58:
         return jjStopAtPos(0, 107);
      case 59:
         return jjStopAtPos(0, 106);
      case 61:
         jjmatchedKind = 88;
         return jjMoveStringLiteralDfa1_2(0x2000000L);
      case 62:
         return jjStopAtPos(0, 120);
      case 63:
         return jjStopAtPos(0, 87);
      case 91:
         return jjStopAtPos(0, 108);
      case 93:
         return jjStopAtPos(0, 109);
      case 97:
         return jjMoveStringLiteralDfa1_2(0x8000000000000L);
      case 102:
         return jjMoveStringLiteralDfa1_2(0x20000L);
      case 105:
         return jjMoveStringLiteralDfa1_2(0x4000000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_2(0x40000L);
      case 117:
         return jjMoveStringLiteralDfa1_2(0x10000000000000L);
      case 123:
         return jjStopAtPos(0, 112);
      case 125:
         return jjStopAtPos(0, 113);
      default :
         return jjMoveNfa_2(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_2(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active1 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 98);
         break;
      case 46:
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 86;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_2(active1, 0x800000000L);
      case 61:
         if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 89);
         else if ((active1 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 90);
         break;
      case 62:
         if ((active1 & 0x200000000000000L) != 0L)
            return jjStopAtPos(1, 121);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_2(active1, 0x20000L);
      case 110:
         if ((active1 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_2(1, 114, 29);
         break;
      case 114:
         return jjMoveStringLiteralDfa2_2(active1, 0x40000L);
      case 115:
         if ((active1 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_2(1, 115, 29);
         return jjMoveStringLiteralDfa2_2(active1, 0x10000000000000L);
      default :
         break;
   }
   return jjStartNfa_2(0, 0L, active1);
}
private final int jjMoveStringLiteralDfa2_2(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_2(0, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 46:
         if ((active1 & 0x800000000L) != 0L)
            return jjStopAtPos(2, 99);
         break;
      case 105:
         return jjMoveStringLiteralDfa3_2(active1, 0x10000000000000L);
      case 108:
         return jjMoveStringLiteralDfa3_2(active1, 0x20000L);
      case 117:
         return jjMoveStringLiteralDfa3_2(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_2(1, 0L, active1);
}
private final int jjMoveStringLiteralDfa3_2(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_2(1, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x40000L) != 0L)
            return jjStartNfaWithStates_2(3, 82, 29);
         break;
      case 110:
         return jjMoveStringLiteralDfa4_2(active1, 0x10000000000000L);
      case 115:
         return jjMoveStringLiteralDfa4_2(active1, 0x20000L);
      default :
         break;
   }
   return jjStartNfa_2(2, 0L, active1);
}
private final int jjMoveStringLiteralDfa4_2(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_2(2, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x20000L) != 0L)
            return jjStartNfaWithStates_2(4, 81, 29);
         break;
      case 103:
         if ((active1 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_2(4, 116, 29);
         break;
      default :
         break;
   }
   return jjStartNfa_2(3, 0L, active1);
}
private final int jjMoveNfa_2(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 69;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 83)
                        kind = 83;
                     jjCheckNAddStates(198, 200);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 38)
                     jjAddStates(201, 205);
                  else if (curChar == 60)
                  {
                     if (kind > 91)
                        kind = 91;
                     jjstateSet[jjnewStateCnt++] = 31;
                  }
                  else if (curChar == 36)
                  {
                     if (kind > 117)
                        kind = 117;
                     jjCheckNAdd(29);
                  }
                  else if (curChar == 39)
                     jjCheckNAddStates(206, 208);
                  else if (curChar == 34)
                     jjCheckNAddStates(209, 211);
                  if (curChar == 38)
                  {
                     if (kind > 102)
                        kind = 102;
                  }
                  else if (curChar == 60)
                     jjCheckNAdd(22);
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 4:
                  if ((0x9400000000L & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 5:
                  if (curChar == 34 && kind > 79)
                     kind = 79;
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 8:
                  if (curChar == 39)
                     jjCheckNAddStates(206, 208);
                  break;
               case 9:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 11:
                  if ((0x9400000000L & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 12:
                  if (curChar == 39 && kind > 79)
                     kind = 79;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 16:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 17:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 18:
                  if (curChar == 34 && kind > 80)
                     kind = 80;
                  break;
               case 19:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(20, 21);
                  break;
               case 20:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(20, 21);
                  break;
               case 21:
                  if (curChar == 39 && kind > 80)
                     kind = 80;
                  break;
               case 22:
                  if (curChar == 61 && kind > 92)
                     kind = 92;
                  break;
               case 23:
                  if (curChar == 60)
                     jjCheckNAdd(22);
                  break;
               case 24:
               case 66:
                  if (curChar == 38 && kind > 102)
                     kind = 102;
                  break;
               case 28:
                  if (curChar != 36)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 29:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 30:
                  if (curChar != 60)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0xa00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 32:
                  if (curChar == 45 && kind > 73)
                     kind = 73;
                  break;
               case 33:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(198, 200);
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(35);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 37:
                  if (curChar == 46)
                     jjCheckNAdd(38);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAdd(38);
                  break;
               case 52:
                  if (curChar == 38)
                     jjAddStates(201, 205);
                  break;
               case 53:
                  if (curChar == 59 && kind > 91)
                     kind = 91;
                  break;
               case 56:
                  if (curChar == 59)
                     jjCheckNAdd(22);
                  break;
               case 59:
                  if (curChar == 59 && kind > 93)
                     kind = 93;
                  break;
               case 62:
                  if (curChar == 61 && kind > 94)
                     kind = 94;
                  break;
               case 63:
                  if (curChar == 59)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                  {
                     if (kind > 117)
                        kind = 117;
                     jjCheckNAdd(29);
                  }
                  else if (curChar == 92)
                     jjAddStates(212, 215);
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 26;
                  if (curChar == 103)
                     jjCheckNAddTwoStates(47, 68);
                  else if (curChar == 108)
                     jjCheckNAddTwoStates(40, 42);
                  else if (curChar == 124)
                  {
                     if (kind > 103)
                        kind = 103;
                  }
                  else if (curChar == 114)
                     jjAddStates(216, 217);
                  break;
               case 2:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 3:
                  if (curChar == 92)
                     jjAddStates(218, 219);
                  break;
               case 4:
                  if ((0x1450c610000000L & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 6:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 7:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 9:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 10:
                  if (curChar == 92)
                     jjAddStates(220, 221);
                  break;
               case 11:
                  if ((0x1450c610000000L & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 13:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 15:
                  if (curChar == 114)
                     jjAddStates(216, 217);
                  break;
               case 17:
                  jjAddStates(222, 223);
                  break;
               case 20:
                  jjAddStates(224, 225);
                  break;
               case 25:
               case 26:
                  if (curChar == 124 && kind > 103)
                     kind = 103;
                  break;
               case 27:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
               case 29:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 39:
                  if (curChar == 108)
                     jjCheckNAddTwoStates(40, 42);
                  break;
               case 40:
                  if (curChar == 116 && kind > 91)
                     kind = 91;
                  break;
               case 41:
                  if (curChar == 101 && kind > 92)
                     kind = 92;
                  break;
               case 42:
               case 45:
                  if (curChar == 116)
                     jjCheckNAdd(41);
                  break;
               case 43:
                  if (curChar == 92)
                     jjAddStates(212, 215);
                  break;
               case 44:
                  if (curChar == 108)
                     jjCheckNAdd(40);
                  break;
               case 46:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 116 && kind > 93)
                     kind = 93;
                  break;
               case 48:
                  if (curChar == 103)
                     jjCheckNAdd(47);
                  break;
               case 49:
                  if (curChar == 101 && kind > 94)
                     kind = 94;
                  break;
               case 50:
               case 68:
                  if (curChar == 116)
                     jjCheckNAdd(49);
                  break;
               case 51:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 54:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 57:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 60:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 64:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 67:
                  if (curChar == 103)
                     jjCheckNAddTwoStates(47, 68);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 29:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 2:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(209, 211);
                  break;
               case 9:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(206, 208);
                  break;
               case 17:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(222, 223);
                  break;
               case 20:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(224, 225);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 69 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x1c000000060000L) != 0L)
         {
            jjmatchedKind = 117;
            return 29;
         }
         return -1;
      case 1:
         if ((active1 & 0x10000000060000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 117;
               jjmatchedPos = 1;
            }
            return 29;
         }
         if ((active1 & 0xc000000000000L) != 0L)
            return 29;
         return -1;
      case 2:
         if ((active1 & 0x10000000060000L) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 2;
            return 29;
         }
         return -1;
      case 3:
         if ((active1 & 0x40000L) != 0L)
            return 29;
         if ((active1 & 0x10000000020000L) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 3;
            return 29;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1)
{
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1), pos + 1);
}
private final int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 33:
         jjmatchedKind = 104;
         return jjMoveStringLiteralDfa1_3(0x4000000L);
      case 37:
         return jjStopAtPos(0, 101);
      case 40:
         return jjStopAtPos(0, 110);
      case 41:
         return jjStopAtPos(0, 111);
      case 42:
         jjmatchedKind = 97;
         return jjMoveStringLiteralDfa1_3(0x400000000L);
      case 43:
         return jjStopAtPos(0, 95);
      case 44:
         return jjStopAtPos(0, 105);
      case 45:
         return jjStopAtPos(0, 96);
      case 46:
         jjmatchedKind = 85;
         return jjMoveStringLiteralDfa1_3(0x800400000L);
      case 47:
         return jjStopAtPos(0, 100);
      case 58:
         return jjStopAtPos(0, 107);
      case 59:
         return jjStopAtPos(0, 106);
      case 61:
         jjmatchedKind = 88;
         return jjMoveStringLiteralDfa1_3(0x2000000L);
      case 62:
         jjmatchedKind = 122;
         return jjMoveStringLiteralDfa1_3(0x800000000000000L);
      case 63:
         return jjStopAtPos(0, 87);
      case 91:
         return jjStopAtPos(0, 108);
      case 93:
         return jjStopAtPos(0, 109);
      case 97:
         return jjMoveStringLiteralDfa1_3(0x8000000000000L);
      case 102:
         return jjMoveStringLiteralDfa1_3(0x20000L);
      case 105:
         return jjMoveStringLiteralDfa1_3(0x4000000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_3(0x40000L);
      case 117:
         return jjMoveStringLiteralDfa1_3(0x10000000000000L);
      case 123:
         return jjStopAtPos(0, 112);
      case 125:
         return jjStopAtPos(0, 113);
      default :
         return jjMoveNfa_3(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_3(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active1 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 98);
         break;
      case 46:
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 86;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_3(active1, 0x800000000L);
      case 61:
         if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 89);
         else if ((active1 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 90);
         else if ((active1 & 0x800000000000000L) != 0L)
            return jjStopAtPos(1, 123);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_3(active1, 0x20000L);
      case 110:
         if ((active1 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_3(1, 114, 29);
         break;
      case 114:
         return jjMoveStringLiteralDfa2_3(active1, 0x40000L);
      case 115:
         if ((active1 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_3(1, 115, 29);
         return jjMoveStringLiteralDfa2_3(active1, 0x10000000000000L);
      default :
         break;
   }
   return jjStartNfa_3(0, 0L, active1);
}
private final int jjMoveStringLiteralDfa2_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(0, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 46:
         if ((active1 & 0x800000000L) != 0L)
            return jjStopAtPos(2, 99);
         break;
      case 105:
         return jjMoveStringLiteralDfa3_3(active1, 0x10000000000000L);
      case 108:
         return jjMoveStringLiteralDfa3_3(active1, 0x20000L);
      case 117:
         return jjMoveStringLiteralDfa3_3(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_3(1, 0L, active1);
}
private final int jjMoveStringLiteralDfa3_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(1, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x40000L) != 0L)
            return jjStartNfaWithStates_3(3, 82, 29);
         break;
      case 110:
         return jjMoveStringLiteralDfa4_3(active1, 0x10000000000000L);
      case 115:
         return jjMoveStringLiteralDfa4_3(active1, 0x20000L);
      default :
         break;
   }
   return jjStartNfa_3(2, 0L, active1);
}
private final int jjMoveStringLiteralDfa4_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(2, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x20000L) != 0L)
            return jjStartNfaWithStates_3(4, 81, 29);
         break;
      case 103:
         if ((active1 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_3(4, 116, 29);
         break;
      default :
         break;
   }
   return jjStartNfa_3(3, 0L, active1);
}
private final int jjMoveNfa_3(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 69;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 83)
                        kind = 83;
                     jjCheckNAddStates(198, 200);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 38)
                     jjAddStates(201, 205);
                  else if (curChar == 60)
                  {
                     if (kind > 91)
                        kind = 91;
                     jjstateSet[jjnewStateCnt++] = 31;
                  }
                  else if (curChar == 36)
                  {
                     if (kind > 117)
                        kind = 117;
                     jjCheckNAdd(29);
                  }
                  else if (curChar == 39)
                     jjCheckNAddStates(206, 208);
                  else if (curChar == 34)
                     jjCheckNAddStates(209, 211);
                  if (curChar == 38)
                  {
                     if (kind > 102)
                        kind = 102;
                  }
                  else if (curChar == 60)
                     jjCheckNAdd(22);
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 4:
                  if ((0x9400000000L & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 5:
                  if (curChar == 34 && kind > 79)
                     kind = 79;
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 8:
                  if (curChar == 39)
                     jjCheckNAddStates(206, 208);
                  break;
               case 9:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 11:
                  if ((0x9400000000L & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 12:
                  if (curChar == 39 && kind > 79)
                     kind = 79;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 16:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 17:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 18:
                  if (curChar == 34 && kind > 80)
                     kind = 80;
                  break;
               case 19:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(20, 21);
                  break;
               case 20:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(20, 21);
                  break;
               case 21:
                  if (curChar == 39 && kind > 80)
                     kind = 80;
                  break;
               case 22:
                  if (curChar == 61 && kind > 92)
                     kind = 92;
                  break;
               case 23:
                  if (curChar == 60)
                     jjCheckNAdd(22);
                  break;
               case 24:
               case 66:
                  if (curChar == 38 && kind > 102)
                     kind = 102;
                  break;
               case 28:
                  if (curChar != 36)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 29:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 30:
                  if (curChar != 60)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0xa00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 32:
                  if (curChar == 45 && kind > 73)
                     kind = 73;
                  break;
               case 33:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(198, 200);
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(35);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 37:
                  if (curChar == 46)
                     jjCheckNAdd(38);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAdd(38);
                  break;
               case 52:
                  if (curChar == 38)
                     jjAddStates(201, 205);
                  break;
               case 53:
                  if (curChar == 59 && kind > 91)
                     kind = 91;
                  break;
               case 56:
                  if (curChar == 59)
                     jjCheckNAdd(22);
                  break;
               case 59:
                  if (curChar == 59 && kind > 93)
                     kind = 93;
                  break;
               case 62:
                  if (curChar == 61 && kind > 94)
                     kind = 94;
                  break;
               case 63:
                  if (curChar == 59)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                  {
                     if (kind > 117)
                        kind = 117;
                     jjCheckNAdd(29);
                  }
                  else if (curChar == 92)
                     jjAddStates(212, 215);
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 26;
                  if (curChar == 103)
                     jjCheckNAddTwoStates(47, 68);
                  else if (curChar == 108)
                     jjCheckNAddTwoStates(40, 42);
                  else if (curChar == 124)
                  {
                     if (kind > 103)
                        kind = 103;
                  }
                  else if (curChar == 114)
                     jjAddStates(216, 217);
                  break;
               case 2:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 3:
                  if (curChar == 92)
                     jjAddStates(218, 219);
                  break;
               case 4:
                  if ((0x1450c610000000L & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 6:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 7:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(209, 211);
                  break;
               case 9:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 10:
                  if (curChar == 92)
                     jjAddStates(220, 221);
                  break;
               case 11:
                  if ((0x1450c610000000L & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 13:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 15:
                  if (curChar == 114)
                     jjAddStates(216, 217);
                  break;
               case 17:
                  jjAddStates(222, 223);
                  break;
               case 20:
                  jjAddStates(224, 225);
                  break;
               case 25:
               case 26:
                  if (curChar == 124 && kind > 103)
                     kind = 103;
                  break;
               case 27:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
               case 29:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 39:
                  if (curChar == 108)
                     jjCheckNAddTwoStates(40, 42);
                  break;
               case 40:
                  if (curChar == 116 && kind > 91)
                     kind = 91;
                  break;
               case 41:
                  if (curChar == 101 && kind > 92)
                     kind = 92;
                  break;
               case 42:
               case 45:
                  if (curChar == 116)
                     jjCheckNAdd(41);
                  break;
               case 43:
                  if (curChar == 92)
                     jjAddStates(212, 215);
                  break;
               case 44:
                  if (curChar == 108)
                     jjCheckNAdd(40);
                  break;
               case 46:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 116 && kind > 93)
                     kind = 93;
                  break;
               case 48:
                  if (curChar == 103)
                     jjCheckNAdd(47);
                  break;
               case 49:
                  if (curChar == 101 && kind > 94)
                     kind = 94;
                  break;
               case 50:
               case 68:
                  if (curChar == 116)
                     jjCheckNAdd(49);
                  break;
               case 51:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 54:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 57:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 60:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 64:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 67:
                  if (curChar == 103)
                     jjCheckNAddTwoStates(47, 68);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 29:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 2:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(209, 211);
                  break;
               case 9:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(206, 208);
                  break;
               case 17:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(222, 223);
                  break;
               case 20:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(224, 225);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 69 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0, long active1)
{
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0, active1), pos + 1);
}
private final int jjStartNfaWithStates_4(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_4(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_4()
{
   switch(curChar)
   {
      case 45:
         jjmatchedKind = 76;
         return jjMoveStringLiteralDfa1_4(0x2000L);
      default :
         return jjMoveNfa_4(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_4(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_4(active1, 0x2000L);
      default :
         break;
   }
   return jjStartNfa_4(0, 0L, active1);
}
private final int jjMoveStringLiteralDfa2_4(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_4(0, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x2000L) != 0L)
            return jjStopAtPos(2, 77);
         break;
      default :
         break;
   }
   return jjStartNfa_4(1, 0L, active1);
}
private final int jjMoveNfa_4(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xbfffdfffffffffffL & l) == 0L)
                     break;
                  kind = 74;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 74;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_5(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x1c000000060000L) != 0L)
         {
            jjmatchedKind = 117;
            return 29;
         }
         return -1;
      case 1:
         if ((active1 & 0x10000000060000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 117;
               jjmatchedPos = 1;
            }
            return 29;
         }
         if ((active1 & 0xc000000000000L) != 0L)
            return 29;
         return -1;
      case 2:
         if ((active1 & 0x10000000060000L) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 2;
            return 29;
         }
         return -1;
      case 3:
         if ((active1 & 0x40000L) != 0L)
            return 29;
         if ((active1 & 0x10000000020000L) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 3;
            return 29;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0, long active1)
{
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0, active1), pos + 1);
}
private final int jjStartNfaWithStates_5(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_5(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_5()
{
   switch(curChar)
   {
      case 33:
         jjmatchedKind = 104;
         return jjMoveStringLiteralDfa1_5(0x4000000L);
      case 37:
         return jjStopAtPos(0, 101);
      case 40:
         return jjStopAtPos(0, 110);
      case 41:
         return jjStopAtPos(0, 111);
      case 42:
         jjmatchedKind = 97;
         return jjMoveStringLiteralDfa1_5(0x400000000L);
      case 43:
         return jjStopAtPos(0, 95);
      case 44:
         return jjStopAtPos(0, 105);
      case 45:
         return jjStopAtPos(0, 96);
      case 46:
         jjmatchedKind = 85;
         return jjMoveStringLiteralDfa1_5(0x800400000L);
      case 47:
         jjmatchedKind = 100;
         return jjMoveStringLiteralDfa1_5(0x200000000000000L);
      case 58:
         return jjStopAtPos(0, 107);
      case 59:
         return jjStopAtPos(0, 106);
      case 61:
         jjmatchedKind = 88;
         return jjMoveStringLiteralDfa1_5(0x2000000L);
      case 62:
         return jjStopAtPos(0, 120);
      case 63:
         return jjStopAtPos(0, 87);
      case 91:
         return jjStopAtPos(0, 108);
      case 93:
         return jjStopAtPos(0, 109);
      case 97:
         return jjMoveStringLiteralDfa1_5(0x8000000000000L);
      case 102:
         return jjMoveStringLiteralDfa1_5(0x20000L);
      case 105:
         return jjMoveStringLiteralDfa1_5(0x4000000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_5(0x40000L);
      case 117:
         return jjMoveStringLiteralDfa1_5(0x10000000000000L);
      case 123:
         return jjStopAtPos(0, 112);
      case 125:
         return jjStopAtPos(0, 113);
      default :
         return jjMoveNfa_5(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_5(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active1 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 98);
         break;
      case 46:
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 86;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_5(active1, 0x800000000L);
      case 61:
         if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 89);
         else if ((active1 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 90);
         break;
      case 62:
         if ((active1 & 0x200000000000000L) != 0L)
            return jjStopAtPos(1, 121);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_5(active1, 0x20000L);
      case 110:
         if ((active1 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_5(1, 114, 29);
         break;
      case 114:
         return jjMoveStringLiteralDfa2_5(active1, 0x40000L);
      case 115:
         if ((active1 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_5(1, 115, 29);
         return jjMoveStringLiteralDfa2_5(active1, 0x10000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(0, 0L, active1);
}
private final int jjMoveStringLiteralDfa2_5(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_5(0, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 46:
         if ((active1 & 0x800000000L) != 0L)
            return jjStopAtPos(2, 99);
         break;
      case 105:
         return jjMoveStringLiteralDfa3_5(active1, 0x10000000000000L);
      case 108:
         return jjMoveStringLiteralDfa3_5(active1, 0x20000L);
      case 117:
         return jjMoveStringLiteralDfa3_5(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_5(1, 0L, active1);
}
private final int jjMoveStringLiteralDfa3_5(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_5(1, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x40000L) != 0L)
            return jjStartNfaWithStates_5(3, 82, 29);
         break;
      case 110:
         return jjMoveStringLiteralDfa4_5(active1, 0x10000000000000L);
      case 115:
         return jjMoveStringLiteralDfa4_5(active1, 0x20000L);
      default :
         break;
   }
   return jjStartNfa_5(2, 0L, active1);
}
private final int jjMoveStringLiteralDfa4_5(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_5(2, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x20000L) != 0L)
            return jjStartNfaWithStates_5(4, 81, 29);
         break;
      case 103:
         if ((active1 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_5(4, 116, 29);
         break;
      default :
         break;
   }
   return jjStartNfa_5(3, 0L, active1);
}
private final int jjMoveNfa_5(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 66;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 83)
                        kind = 83;
                     jjCheckNAddStates(226, 228);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 124)
                        kind = 124;
                     jjCheckNAdd(30);
                  }
                  else if (curChar == 38)
                     jjAddStates(229, 233);
                  else if (curChar == 36)
                  {
                     if (kind > 117)
                        kind = 117;
                     jjCheckNAdd(29);
                  }
                  else if (curChar == 60)
                     jjCheckNAdd(22);
                  else if (curChar == 39)
                     jjCheckNAddStates(234, 236);
                  else if (curChar == 34)
                     jjCheckNAddStates(237, 239);
                  if (curChar == 38)
                  {
                     if (kind > 102)
                        kind = 102;
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 91)
                        kind = 91;
                  }
                  break;
               case 1:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(237, 239);
                  break;
               case 3:
                  if ((0x9400000000L & l) != 0L)
                     jjCheckNAddStates(237, 239);
                  break;
               case 4:
                  if (curChar == 34 && kind > 79)
                     kind = 79;
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(237, 239);
                  break;
               case 7:
                  if (curChar == 39)
                     jjCheckNAddStates(234, 236);
                  break;
               case 8:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddStates(234, 236);
                  break;
               case 10:
                  if ((0x9400000000L & l) != 0L)
                     jjCheckNAddStates(234, 236);
                  break;
               case 11:
                  if (curChar == 39 && kind > 79)
                     kind = 79;
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(234, 236);
                  break;
               case 15:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(16, 17);
                  break;
               case 16:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(16, 17);
                  break;
               case 17:
                  if (curChar == 34 && kind > 80)
                     kind = 80;
                  break;
               case 18:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 19:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 20:
                  if (curChar == 39 && kind > 80)
                     kind = 80;
                  break;
               case 21:
                  if (curChar == 60 && kind > 91)
                     kind = 91;
                  break;
               case 22:
                  if (curChar == 61 && kind > 92)
                     kind = 92;
                  break;
               case 23:
                  if (curChar == 60)
                     jjCheckNAdd(22);
                  break;
               case 24:
               case 63:
                  if (curChar == 38 && kind > 102)
                     kind = 102;
                  break;
               case 28:
                  if (curChar != 36)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 29:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 30:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 124)
                     kind = 124;
                  jjCheckNAdd(30);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(226, 228);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(32);
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(33, 34);
                  break;
               case 34:
                  if (curChar == 46)
                     jjCheckNAdd(35);
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAdd(35);
                  break;
               case 49:
                  if (curChar == 38)
                     jjAddStates(229, 233);
                  break;
               case 50:
                  if (curChar == 59 && kind > 91)
                     kind = 91;
                  break;
               case 53:
                  if (curChar == 59)
                     jjCheckNAdd(22);
                  break;
               case 56:
                  if (curChar == 59 && kind > 93)
                     kind = 93;
                  break;
               case 59:
                  if (curChar == 61 && kind > 94)
                     kind = 94;
                  break;
               case 60:
                  if (curChar == 59)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87ffffffL & l) != 0L)
                  {
                     if (kind > 117)
                        kind = 117;
                     jjCheckNAdd(29);
                  }
                  else if (curChar == 92)
                     jjAddStates(240, 243);
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 26;
                  if (curChar == 103)
                     jjCheckNAddTwoStates(44, 65);
                  else if (curChar == 108)
                     jjCheckNAddTwoStates(37, 39);
                  else if (curChar == 124)
                  {
                     if (kind > 103)
                        kind = 103;
                  }
                  else if (curChar == 114)
                     jjAddStates(244, 245);
                  break;
               case 1:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(237, 239);
                  break;
               case 2:
                  if (curChar == 92)
                     jjAddStates(246, 247);
                  break;
               case 3:
                  if ((0x1450c610000000L & l) != 0L)
                     jjCheckNAddStates(237, 239);
                  break;
               case 5:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(237, 239);
                  break;
               case 8:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(234, 236);
                  break;
               case 9:
                  if (curChar == 92)
                     jjAddStates(248, 249);
                  break;
               case 10:
                  if ((0x1450c610000000L & l) != 0L)
                     jjCheckNAddStates(234, 236);
                  break;
               case 12:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(234, 236);
                  break;
               case 14:
                  if (curChar == 114)
                     jjAddStates(244, 245);
                  break;
               case 16:
                  jjAddStates(109, 110);
                  break;
               case 19:
                  jjAddStates(250, 251);
                  break;
               case 25:
               case 26:
                  if (curChar == 124 && kind > 103)
                     kind = 103;
                  break;
               case 27:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
               case 29:
                  if ((0x7fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 36:
                  if (curChar == 108)
                     jjCheckNAddTwoStates(37, 39);
                  break;
               case 37:
                  if (curChar == 116 && kind > 91)
                     kind = 91;
                  break;
               case 38:
                  if (curChar == 101 && kind > 92)
                     kind = 92;
                  break;
               case 39:
               case 42:
                  if (curChar == 116)
                     jjCheckNAdd(38);
                  break;
               case 40:
                  if (curChar == 92)
                     jjAddStates(240, 243);
                  break;
               case 41:
                  if (curChar == 108)
                     jjCheckNAdd(37);
                  break;
               case 43:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 116 && kind > 93)
                     kind = 93;
                  break;
               case 45:
                  if (curChar == 103)
                     jjCheckNAdd(44);
                  break;
               case 46:
                  if (curChar == 101 && kind > 94)
                     kind = 94;
                  break;
               case 47:
               case 65:
                  if (curChar == 116)
                     jjCheckNAdd(46);
                  break;
               case 48:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 51:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 54:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 57:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 61:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 64:
                  if (curChar == 103)
                     jjCheckNAddTwoStates(44, 65);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 29:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAdd(29);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(237, 239);
                  break;
               case 8:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(234, 236);
                  break;
               case 16:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(109, 110);
                  break;
               case 19:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(250, 251);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 66 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   3, 4, 2, 3, 4, 352, 358, 366, 377, 388, 397, 407, 417, 429, 438, 450, 
   463, 473, 483, 503, 508, 514, 4, 13, 14, 23, 24, 27, 28, 35, 36, 41, 
   42, 50, 51, 58, 59, 64, 65, 72, 73, 80, 81, 87, 88, 96, 97, 104, 
   105, 114, 115, 121, 122, 132, 133, 139, 140, 145, 146, 153, 154, 159, 160, 168, 
   169, 179, 180, 189, 190, 199, 200, 207, 208, 216, 217, 226, 227, 234, 235, 243, 
   244, 245, 249, 254, 255, 260, 261, 266, 267, 276, 277, 286, 287, 294, 295, 305, 
   306, 314, 315, 326, 327, 334, 335, 345, 346, 347, 349, 6, 7, 16, 17, 171, 
   172, 182, 183, 192, 193, 202, 203, 204, 210, 211, 212, 219, 220, 221, 229, 230, 
   231, 237, 238, 239, 246, 247, 248, 251, 252, 253, 257, 258, 259, 263, 264, 265, 
   269, 270, 279, 280, 281, 297, 298, 299, 317, 318, 319, 337, 338, 355, 356, 361, 
   362, 369, 370, 380, 381, 391, 392, 400, 401, 410, 411, 420, 421, 432, 433, 441, 
   442, 453, 454, 466, 467, 476, 477, 486, 487, 497, 498, 501, 502, 498, 500, 501, 
   502, 496, 501, 502, 510, 511, 35, 36, 37, 55, 58, 61, 65, 66, 9, 10, 
   12, 2, 3, 5, 44, 46, 48, 51, 16, 19, 4, 6, 11, 13, 17, 18, 
   20, 21, 32, 33, 34, 52, 55, 58, 62, 63, 8, 9, 11, 1, 2, 4, 
   41, 43, 45, 48, 15, 18, 3, 5, 10, 12, 19, 20, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default : 
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec5[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 51:
         return ((jjbitVec7[i2] & l2) != 0L);
      case 61:
         return ((jjbitVec8[i2] & l2) != 0L);
      default : 
         if ((jjbitVec3[i1] & l1) != 0L)
            return true;
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, "\74\43\55\55", null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\100", null, null, null, 
null, null, null, null, "\44\173", "\43\173", null, null, null, null, null, null, 
null, null, null, "\146\141\154\163\145", "\164\162\165\145", null, null, "\56", 
"\56\56", "\77", "\75", "\75\75", "\41\75", null, null, null, null, "\53", "\55", "\52", 
"\52\52", "\56\56\56", "\57", "\45", null, null, "\41", "\54", "\73", "\72", "\133", 
"\135", "\50", "\51", "\173", "\175", "\151\156", "\141\163", "\165\163\151\156\147", 
null, null, null, "\76", "\57\76", "\76", "\76\75", null, "\55\55\76", null, null, 
null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "NODIRECTIVE", 
   "FM_EXPRESSION", 
   "IN_PAREN", 
   "EXPRESSION_COMMENT", 
   "NO_SPACE_EXPRESSION", 
   "NO_PARSE", 
};
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, 2, 2, -1, 4, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 
   -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffffffc1L, 0xff3fffffffff80ffL, 0x1L, 
};
static final long[] jjtoSkip = {
   0x0L, 0x3f00L, 0x0L, 
};
private SimpleCharStream input_stream;
private final int[] jjrounds = new int[515];
private final int[] jjstateSet = new int[1030];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public FMParserTokenManager(SimpleCharStream stream)
{
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public FMParserTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 515; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 7 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

private final Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public final Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
     case 4:
       try { input_stream.backup(0);
          while (curChar <= 62 && (0x4000000000000000L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       break;
     case 5:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_5();
       break;
     case 6:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_6();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
           SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

final void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 77 :
         if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
              if (parenthesisNesting >0) SwitchTo(IN_PAREN); else SwitchTo(FM_EXPRESSION);
         break;
      default :
         break;
   }
}
final void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 6 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                    strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 7 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                    strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 8 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                     strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 9 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                              strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 10 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                         strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 11 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 12 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                             strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 13 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                         strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 14 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                             strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 15 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                   strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 16 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                 strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 17 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                               strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 18 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                             strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 19 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                 strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 20 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                           strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 21 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                   strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 22 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                           strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 23 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                         strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 24 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                             strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 25 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                         strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 26 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                               strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 27 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                      strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 28 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                    strictSyntaxCheck(matchedToken, NO_PARSE); noparseTag="comment";
         break;
      case 29 :
        if (image == null)
            image = new StringBuffer(jjstrLiteralImages[29]);
         else
            image.append(jjstrLiteralImages[29]);
                               noparseTag = "-->"; SwitchTo(NO_PARSE);
         break;
      case 30 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                    strictSyntaxCheck(matchedToken, NO_PARSE); noparseTag="noparse";
         break;
      case 31 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                            strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 32 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 33 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                      strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 34 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                      strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 35 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                  strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 36 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                    strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 37 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                    strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 38 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                        strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 39 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                  strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 40 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                        strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 41 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                          strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 42 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                    strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 43 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                              strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 44 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 45 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                         strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 46 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                              strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 47 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 48 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                           strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 49 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                             strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 50 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                             strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 51 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                              strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 52 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                   strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 53 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                         strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 54 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                             strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 55 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                           strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 56 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                               strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 57 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                      strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 58 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                             strictSyntaxCheck(matchedToken, FM_EXPRESSION);
         break;
      case 59 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                    strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 60 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                      strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 61 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                                        strictSyntaxCheck(matchedToken, DEFAULT);
         break;
      case 64 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                    inFTLHeader = true; SwitchTo(FM_EXPRESSION);
         break;
      case 65 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
                                               eatNewline();
         break;
      case 66 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
       if (strictEscapeSyntax) {
          String s = matchedToken.image;
          int index = s.indexOf('#');
          s = s.substring(index);
          String msg = "Unknown directive: "
                        + s
                        + " on line: " + matchedToken.beginLine
                        + ", column: " + matchedToken.beginColumn +1
                        + ", in template: " + templateName;

          throw new TokenMgrError(msg, TokenMgrError.LEXICAL_ERROR);
       }
         break;
      case 110 :
        if (image == null)
            image = new StringBuffer(jjstrLiteralImages[110]);
         else
            image.append(jjstrLiteralImages[110]);
     ++parenthesisNesting;
     if (parenthesisNesting == 1)
        SwitchTo(IN_PAREN);
         break;
      case 111 :
        if (image == null)
            image = new StringBuffer(jjstrLiteralImages[111]);
         else
            image.append(jjstrLiteralImages[111]);
     --parenthesisNesting;
     if (parenthesisNesting == 0)
        SwitchTo(FM_EXPRESSION);
         break;
      case 112 :
        if (image == null)
            image = new StringBuffer(jjstrLiteralImages[112]);
         else
            image.append(jjstrLiteralImages[112]);
                       ++hashLiteralNesting;
         break;
      case 113 :
        if (image == null)
            image = new StringBuffer(jjstrLiteralImages[113]);
         else
            image.append(jjstrLiteralImages[113]);
     if (hashLiteralNesting == 0)
        SwitchTo(DEFAULT);
     else
        --hashLiteralNesting;
         break;
      case 120 :
        if (image == null)
            image = new StringBuffer(jjstrLiteralImages[120]);
         else
            image.append(jjstrLiteralImages[120]);
                         if (inFTLHeader) eatNewline(); inFTLHeader = false; SwitchTo(DEFAULT);
         break;
      case 121 :
        if (image == null)
            image = new StringBuffer(jjstrLiteralImages[121]);
         else
            image.append(jjstrLiteralImages[121]);
                                if (inFTLHeader) eatNewline(); inFTLHeader = false; SwitchTo(DEFAULT);
         break;
      case 125 :
        if (image == null)
            image = new StringBuffer(jjstrLiteralImages[125]);
         else
            image.append(jjstrLiteralImages[125]);
        if (noparseTag.equals("-->"))
           SwitchTo(DEFAULT);
         break;
      case 126 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         StringTokenizer st = new StringTokenizer(image.toString(),
                                                  " \t\n\r<>/#",
                                                  false);
         if (st.nextToken().equals(noparseTag)) {
            SwitchTo(DEFAULT);
         }
         break;
      default : 
         break;
   }
}
}
