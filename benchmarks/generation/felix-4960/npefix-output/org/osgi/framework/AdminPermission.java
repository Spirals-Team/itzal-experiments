package org.osgi.framework;

import fr.inria.spirals.npefix.resi.context.TryContext;
import java.io.IOException;
import java.util.HashMap;
import fr.inria.spirals.npefix.resi.exception.ForceReturn;
import fr.inria.spirals.npefix.resi.CallChecker;
import java.security.BasicPermission;
import java.security.AccessController;
import fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError;
import java.util.Map;
import fr.inria.spirals.npefix.resi.context.MethodContext;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.security.Permission;
import java.security.PermissionCollection;
import java.security.PrivilegedAction;

public final class AdminPermission extends BasicPermission {
    static final long serialVersionUID = 307051004521261705L;

    public static final String CLASS = "class";

    public static final String EXECUTE = "execute";

    public static final String EXTENSIONLIFECYCLE = "extensionLifecycle";

    public static final String LIFECYCLE = "lifecycle";

    public static final String LISTENER = "listener";

    public static final String METADATA = "metadata";

    public static final String RESOLVE = "resolve";

    public static final String RESOURCE = "resource";

    public static final String STARTLEVEL = "startlevel";

    public static final String CONTEXT = "context";

    public static final String WEAVE = "weave";

    private static final int ACTION_CLASS = 1;

    private static final int ACTION_EXECUTE = 2;

    private static final int ACTION_LIFECYCLE = 4;

    private static final int ACTION_LISTENER = 8;

    private static final int ACTION_METADATA = 16;

    private static final int ACTION_RESOLVE = 64;

    private static final int ACTION_RESOURCE = 128;

    private static final int ACTION_STARTLEVEL = 256;

    private static final int ACTION_EXTENSIONLIFECYCLE = 512;

    private static final int ACTION_CONTEXT = 1024;

    private static final int ACTION_WEAVE = 2048;

    private static final int ACTION_ALL = ((((((((((AdminPermission.ACTION_CLASS) | (AdminPermission.ACTION_EXECUTE)) | (AdminPermission.ACTION_LIFECYCLE)) | (AdminPermission.ACTION_LISTENER)) | (AdminPermission.ACTION_METADATA)) | (AdminPermission.ACTION_RESOLVE)) | (AdminPermission.ACTION_RESOURCE)) | (AdminPermission.ACTION_STARTLEVEL)) | (AdminPermission.ACTION_EXTENSIONLIFECYCLE)) | (AdminPermission.ACTION_CONTEXT)) | (AdminPermission.ACTION_WEAVE);

    static final int ACTION_NONE = 0;

    private volatile String actions = null;

    transient int action_mask;

    transient Filter filter;

    final transient Bundle bundle;

    private transient volatile Map<String, Object> properties;

    private static final ThreadLocal<Bundle> recurse = new ThreadLocal<Bundle>();

    public AdminPermission() {
        this(null, AdminPermission.ACTION_ALL);
        MethodContext _bcornu_methode_context57 = new MethodContext(null);
        try {
        } finally {
            _bcornu_methode_context57.methodEnd();
        }
    }

    public AdminPermission(String filter, String actions) {
        this(AdminPermission.parseFilter(filter), AdminPermission.parseActions(actions));
        MethodContext _bcornu_methode_context58 = new MethodContext(null);
        try {
        } finally {
            _bcornu_methode_context58.methodEnd();
        }
    }

    public AdminPermission(Bundle bundle, String actions) {
        super(AdminPermission.createName(bundle));
        MethodContext _bcornu_methode_context59 = new MethodContext(null);
        try {
            setTransients(null, AdminPermission.parseActions(actions));
            this.bundle = bundle;
            CallChecker.varAssign(this.bundle, "this.bundle", 288, 9962, 9982);
        } finally {
            _bcornu_methode_context59.methodEnd();
        }
    }

    private static String createName(Bundle bundle) {
        MethodContext _bcornu_methode_context771 = new MethodContext(String.class);
        try {
            CallChecker.varInit(bundle, "bundle", 297, 9989, 10403);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 297, 9989, 10403);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 297, 9989, 10403);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 297, 9989, 10403);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 297, 9989, 10403);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 297, 9989, 10403);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 297, 9989, 10403);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 297, 9989, 10403);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 297, 9989, 10403);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 297, 9989, 10403);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 297, 9989, 10403);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 297, 9989, 10403);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 297, 9989, 10403);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 297, 9989, 10403);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 297, 9989, 10403);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 297, 9989, 10403);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 297, 9989, 10403);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 297, 9989, 10403);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 297, 9989, 10403);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 297, 9989, 10403);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 297, 9989, 10403);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 297, 9989, 10403);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 297, 9989, 10403);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 297, 9989, 10403);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 297, 9989, 10403);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 297, 9989, 10403);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 297, 9989, 10403);
            if (bundle == null) {
                throw new IllegalArgumentException("bundle must not be null");
            }
            StringBuffer sb = CallChecker.varInit(new StringBuffer("(id="), "sb", 301, 10281, 10323);
            if (CallChecker.beforeDeref(sb, StringBuffer.class, 302, 10327, 10328)) {
                sb = CallChecker.beforeCalled(sb, StringBuffer.class, 302, 10327, 10328);
                CallChecker.isCalled(sb, StringBuffer.class, 302, 10327, 10328).append(bundle.getBundleId());
            }
            if (CallChecker.beforeDeref(sb, StringBuffer.class, 303, 10362, 10363)) {
                sb = CallChecker.beforeCalled(sb, StringBuffer.class, 303, 10362, 10363);
                CallChecker.isCalled(sb, StringBuffer.class, 303, 10362, 10363).append(")");
            }
            if (CallChecker.beforeDeref(sb, StringBuffer.class, 304, 10387, 10388)) {
                sb = CallChecker.beforeCalled(sb, StringBuffer.class, 304, 10387, 10388);
                return CallChecker.isCalled(sb, StringBuffer.class, 304, 10387, 10388).toString();
            }else
                throw new AbnormalExecutionError();
            
        } catch (ForceReturn _bcornu_return_t) {
            return ((String) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context771.methodEnd();
        }
    }

    AdminPermission(Filter filter, int mask) {
        super((filter == null ? "*" : CallChecker.isCalled(filter, Filter.class, 314, 10653, 10658).toString()));
        MethodContext _bcornu_methode_context60 = new MethodContext(null);
        try {
            setTransients(filter, mask);
            this.bundle = null;
            CallChecker.varAssign(this.bundle, "this.bundle", 316, 10706, 10724);
        } finally {
            _bcornu_methode_context60.methodEnd();
        }
    }

    private void setTransients(Filter filter, int mask) {
        MethodContext _bcornu_methode_context772 = new MethodContext(void.class);
        try {
            CallChecker.varInit(this, "this", 325, 10731, 11130);
            CallChecker.varInit(mask, "mask", 325, 10731, 11130);
            CallChecker.varInit(filter, "filter", 325, 10731, 11130);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 325, 10731, 11130);
            CallChecker.varInit(this.properties, "properties", 325, 10731, 11130);
            CallChecker.varInit(this.bundle, "bundle", 325, 10731, 11130);
            CallChecker.varInit(this.filter, "filter", 325, 10731, 11130);
            CallChecker.varInit(this.action_mask, "action_mask", 325, 10731, 11130);
            CallChecker.varInit(this.actions, "actions", 325, 10731, 11130);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 325, 10731, 11130);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 325, 10731, 11130);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 325, 10731, 11130);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 325, 10731, 11130);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 325, 10731, 11130);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 325, 10731, 11130);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 325, 10731, 11130);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 325, 10731, 11130);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 325, 10731, 11130);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 325, 10731, 11130);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 325, 10731, 11130);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 325, 10731, 11130);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 325, 10731, 11130);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 325, 10731, 11130);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 325, 10731, 11130);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 325, 10731, 11130);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 325, 10731, 11130);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 325, 10731, 11130);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 325, 10731, 11130);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 325, 10731, 11130);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 325, 10731, 11130);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 325, 10731, 11130);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 325, 10731, 11130);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 325, 10731, 11130);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 325, 10731, 11130);
            this.filter = filter;
            CallChecker.varAssign(this.filter, "this.filter", 326, 10948, 10968);
            if ((mask == (AdminPermission.ACTION_NONE)) || ((mask & (AdminPermission.ACTION_ALL)) != mask)) {
                throw new IllegalArgumentException("invalid action string");
            }
            this.action_mask = mask;
            CallChecker.varAssign(this.action_mask, "this.action_mask", 330, 11104, 11127);
        } catch (ForceReturn _bcornu_return_t) {
            _bcornu_return_t.getDecision().getValue();
            return ;
        } finally {
            _bcornu_methode_context772.methodEnd();
        }
    }

    private static int parseActions(String actions) {
        MethodContext _bcornu_methode_context773 = new MethodContext(int.class);
        try {
            CallChecker.varInit(actions, "actions", 339, 11134, 18262);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 339, 11134, 18262);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 339, 11134, 18262);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 339, 11134, 18262);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 339, 11134, 18262);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 339, 11134, 18262);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 339, 11134, 18262);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 339, 11134, 18262);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 339, 11134, 18262);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 339, 11134, 18262);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 339, 11134, 18262);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 339, 11134, 18262);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 339, 11134, 18262);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 339, 11134, 18262);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 339, 11134, 18262);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 339, 11134, 18262);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 339, 11134, 18262);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 339, 11134, 18262);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 339, 11134, 18262);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 339, 11134, 18262);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 339, 11134, 18262);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 339, 11134, 18262);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 339, 11134, 18262);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 339, 11134, 18262);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 339, 11134, 18262);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 339, 11134, 18262);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 339, 11134, 18262);
            if ((actions == null) || (actions.equals("*"))) {
                return AdminPermission.ACTION_ALL;
            }
            boolean seencomma = CallChecker.varInit(((boolean) (false)), "seencomma", 344, 11379, 11404);
            int mask = CallChecker.varInit(((int) (AdminPermission.ACTION_NONE)), "mask", 346, 11409, 11431);
            char[] a = CallChecker.varInit(actions.toCharArray(), "a", 348, 11436, 11468);
            int i = CallChecker.init(int.class);
            if (CallChecker.beforeDeref(a, char[].class, 350, 11481, 11481)) {
                a = CallChecker.beforeCalled(a, char[].class, 350, 11481, 11481);
                i = (CallChecker.isCalled(a, char[].class, 350, 11481, 11481).length) - 1;
                CallChecker.varAssign(i, "i", 350, 11481, 11481);
            }
            if (i < 0)
                return mask;
            
            while (i != (-1)) {
                char c = CallChecker.init(char.class);
                a = CallChecker.beforeCalled(a, char[].class, 358, 11608, 11608);
                while ((i != (-1)) && ((((((c = CallChecker.isCalled(a, char[].class, 358, 11608, 11608)[i]) == ' ') || (c == '\r')) || (c == '\n')) || (c == '\f')) || (c == '\t'))) {
                    CallChecker.varAssign(c, "c", 358, 11603, 11612);
                    i--;
                } 
                int matchlen = CallChecker.init(int.class);
                if (CallChecker.beforeDeref(a, char[].class, 364, 11755, 11755)) {
                    if (CallChecker.beforeDeref(a, char[].class, 364, 11774, 11774)) {
                        if (CallChecker.beforeDeref(a, char[].class, 365, 11800, 11800)) {
                            if (CallChecker.beforeDeref(a, char[].class, 365, 11819, 11819)) {
                                if (CallChecker.beforeDeref(a, char[].class, 366, 11845, 11845)) {
                                    if (CallChecker.beforeDeref(a, char[].class, 366, 11864, 11864)) {
                                        if (CallChecker.beforeDeref(a, char[].class, 367, 11890, 11890)) {
                                            if (CallChecker.beforeDeref(a, char[].class, 367, 11909, 11909)) {
                                                if (CallChecker.beforeDeref(a, char[].class, 368, 11935, 11935)) {
                                                    if (CallChecker.beforeDeref(a, char[].class, 368, 11950, 11950)) {
                                                        a = CallChecker.beforeCalled(a, char[].class, 364, 11755, 11755);
                                                        a = CallChecker.beforeCalled(a, char[].class, 364, 11774, 11774);
                                                        a = CallChecker.beforeCalled(a, char[].class, 365, 11800, 11800);
                                                        a = CallChecker.beforeCalled(a, char[].class, 365, 11819, 11819);
                                                        a = CallChecker.beforeCalled(a, char[].class, 366, 11845, 11845);
                                                        a = CallChecker.beforeCalled(a, char[].class, 366, 11864, 11864);
                                                        a = CallChecker.beforeCalled(a, char[].class, 367, 11890, 11890);
                                                        a = CallChecker.beforeCalled(a, char[].class, 367, 11909, 11909);
                                                        a = CallChecker.beforeCalled(a, char[].class, 368, 11935, 11935);
                                                        a = CallChecker.beforeCalled(a, char[].class, 368, 11950, 11950);
                                                        if ((((((i >= 4) && (((CallChecker.isCalled(a, char[].class, 364, 11755, 11755)[(i - 4)]) == 'c') || ((CallChecker.isCalled(a, char[].class, 364, 11774, 11774)[(i - 4)]) == 'C'))) && (((CallChecker.isCalled(a, char[].class, 365, 11800, 11800)[(i - 3)]) == 'l') || ((CallChecker.isCalled(a, char[].class, 365, 11819, 11819)[(i - 3)]) == 'L'))) && (((CallChecker.isCalled(a, char[].class, 366, 11845, 11845)[(i - 2)]) == 'a') || ((CallChecker.isCalled(a, char[].class, 366, 11864, 11864)[(i - 2)]) == 'A'))) && (((CallChecker.isCalled(a, char[].class, 367, 11890, 11890)[(i - 1)]) == 's') || ((CallChecker.isCalled(a, char[].class, 367, 11909, 11909)[(i - 1)]) == 'S'))) && (((CallChecker.isCalled(a, char[].class, 368, 11935, 11935)[i]) == 's') || ((CallChecker.isCalled(a, char[].class, 368, 11950, 11950)[i]) == 'S'))) {
                                                            matchlen = 5;
                                                            CallChecker.varAssign(matchlen, "matchlen", 369, 11970, 11982);
                                                            mask |= (AdminPermission.ACTION_CLASS) | (AdminPermission.ACTION_RESOLVE);
                                                            CallChecker.varAssign(mask, "mask", 370, 11988, 12025);
                                                        }else
                                                            if (CallChecker.beforeDeref(a, char[].class, 373, 12057, 12057)) {
                                                                if (CallChecker.beforeDeref(a, char[].class, 373, 12076, 12076)) {
                                                                    if (CallChecker.beforeDeref(a, char[].class, 374, 12103, 12103)) {
                                                                        if (CallChecker.beforeDeref(a, char[].class, 374, 12122, 12122)) {
                                                                            if (CallChecker.beforeDeref(a, char[].class, 375, 12149, 12149)) {
                                                                                if (CallChecker.beforeDeref(a, char[].class, 375, 12168, 12168)) {
                                                                                    if (CallChecker.beforeDeref(a, char[].class, 376, 12195, 12195)) {
                                                                                        if (CallChecker.beforeDeref(a, char[].class, 376, 12214, 12214)) {
                                                                                            if (CallChecker.beforeDeref(a, char[].class, 377, 12241, 12241)) {
                                                                                                if (CallChecker.beforeDeref(a, char[].class, 377, 12260, 12260)) {
                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 378, 12287, 12287)) {
                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 378, 12306, 12306)) {
                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 379, 12333, 12333)) {
                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 379, 12348, 12348)) {
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 373, 12057, 12057);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 373, 12076, 12076);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 374, 12103, 12103);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 374, 12122, 12122);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 375, 12149, 12149);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 375, 12168, 12168);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 376, 12195, 12195);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 376, 12214, 12214);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 377, 12241, 12241);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 377, 12260, 12260);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 378, 12287, 12287);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 378, 12306, 12306);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 379, 12333, 12333);
                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 379, 12348, 12348);
                                                                                                                    if ((((((((i >= 6) && (((CallChecker.isCalled(a, char[].class, 373, 12057, 12057)[(i - 6)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 373, 12076, 12076)[(i - 6)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 374, 12103, 12103)[(i - 5)]) == 'x') || ((CallChecker.isCalled(a, char[].class, 374, 12122, 12122)[(i - 5)]) == 'X'))) && (((CallChecker.isCalled(a, char[].class, 375, 12149, 12149)[(i - 4)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 375, 12168, 12168)[(i - 4)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 376, 12195, 12195)[(i - 3)]) == 'c') || ((CallChecker.isCalled(a, char[].class, 376, 12214, 12214)[(i - 3)]) == 'C'))) && (((CallChecker.isCalled(a, char[].class, 377, 12241, 12241)[(i - 2)]) == 'u') || ((CallChecker.isCalled(a, char[].class, 377, 12260, 12260)[(i - 2)]) == 'U'))) && (((CallChecker.isCalled(a, char[].class, 378, 12287, 12287)[(i - 1)]) == 't') || ((CallChecker.isCalled(a, char[].class, 378, 12306, 12306)[(i - 1)]) == 'T'))) && (((CallChecker.isCalled(a, char[].class, 379, 12333, 12333)[i]) == 'e') || ((CallChecker.isCalled(a, char[].class, 379, 12348, 12348)[i]) == 'E'))) {
                                                                                                                        matchlen = 7;
                                                                                                                        CallChecker.varAssign(matchlen, "matchlen", 380, 12369, 12381);
                                                                                                                        mask |= (AdminPermission.ACTION_EXECUTE) | (AdminPermission.ACTION_RESOLVE);
                                                                                                                        CallChecker.varAssign(mask, "mask", 381, 12388, 12427);
                                                                                                                    }else
                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 384, 12462, 12462)) {
                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 384, 12482, 12482)) {
                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 385, 12511, 12511)) {
                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 385, 12531, 12531)) {
                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 386, 12560, 12560)) {
                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 386, 12580, 12580)) {
                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 387, 12609, 12609)) {
                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 387, 12629, 12629)) {
                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 388, 12658, 12658)) {
                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 388, 12678, 12678)) {
                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 389, 12707, 12707)) {
                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 389, 12727, 12727)) {
                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 390, 12756, 12756)) {
                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 390, 12776, 12776)) {
                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 391, 12805, 12805)) {
                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 391, 12825, 12825)) {
                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 392, 12854, 12854)) {
                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 392, 12873, 12873)) {
                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 393, 12901, 12901)) {
                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 393, 12920, 12920)) {
                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 394, 12948, 12948)) {
                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 394, 12967, 12967)) {
                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 395, 12995, 12995)) {
                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 395, 13014, 13014)) {
                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 396, 13042, 13042)) {
                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 396, 13061, 13061)) {
                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 397, 13089, 13089)) {
                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 397, 13108, 13108)) {
                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 398, 13136, 13136)) {
                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 398, 13155, 13155)) {
                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 399, 13183, 13183)) {
                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 399, 13202, 13202)) {
                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 400, 13230, 13230)) {
                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 400, 13249, 13249)) {
                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 401, 13277, 13277)) {
                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 401, 13292, 13292)) {
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 384, 12462, 12462);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 384, 12482, 12482);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 385, 12511, 12511);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 385, 12531, 12531);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 386, 12560, 12560);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 386, 12580, 12580);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 387, 12609, 12609);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 387, 12629, 12629);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 388, 12658, 12658);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 388, 12678, 12678);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 389, 12707, 12707);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 389, 12727, 12727);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 390, 12756, 12756);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 390, 12776, 12776);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 391, 12805, 12805);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 391, 12825, 12825);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 392, 12854, 12854);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 392, 12873, 12873);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 393, 12901, 12901);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 393, 12920, 12920);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 394, 12948, 12948);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 394, 12967, 12967);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 395, 12995, 12995);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 395, 13014, 13014);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 396, 13042, 13042);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 396, 13061, 13061);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 397, 13089, 13089);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 397, 13108, 13108);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 398, 13136, 13136);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 398, 13155, 13155);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 399, 13183, 13183);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 399, 13202, 13202);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 400, 13230, 13230);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 400, 13249, 13249);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 401, 13277, 13277);
                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 401, 13292, 13292);
                                                                                                                                                                                                                                                                        if (((((((((((((((((((i >= 17) && (((CallChecker.isCalled(a, char[].class, 384, 12462, 12462)[(i - 17)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 384, 12482, 12482)[(i - 17)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 385, 12511, 12511)[(i - 16)]) == 'x') || ((CallChecker.isCalled(a, char[].class, 385, 12531, 12531)[(i - 16)]) == 'X'))) && (((CallChecker.isCalled(a, char[].class, 386, 12560, 12560)[(i - 15)]) == 't') || ((CallChecker.isCalled(a, char[].class, 386, 12580, 12580)[(i - 15)]) == 'T'))) && (((CallChecker.isCalled(a, char[].class, 387, 12609, 12609)[(i - 14)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 387, 12629, 12629)[(i - 14)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 388, 12658, 12658)[(i - 13)]) == 'n') || ((CallChecker.isCalled(a, char[].class, 388, 12678, 12678)[(i - 13)]) == 'N'))) && (((CallChecker.isCalled(a, char[].class, 389, 12707, 12707)[(i - 12)]) == 's') || ((CallChecker.isCalled(a, char[].class, 389, 12727, 12727)[(i - 12)]) == 'S'))) && (((CallChecker.isCalled(a, char[].class, 390, 12756, 12756)[(i - 11)]) == 'i') || ((CallChecker.isCalled(a, char[].class, 390, 12776, 12776)[(i - 11)]) == 'I'))) && (((CallChecker.isCalled(a, char[].class, 391, 12805, 12805)[(i - 10)]) == 'o') || ((CallChecker.isCalled(a, char[].class, 391, 12825, 12825)[(i - 10)]) == 'O'))) && (((CallChecker.isCalled(a, char[].class, 392, 12854, 12854)[(i - 9)]) == 'n') || ((CallChecker.isCalled(a, char[].class, 392, 12873, 12873)[(i - 9)]) == 'N'))) && (((CallChecker.isCalled(a, char[].class, 393, 12901, 12901)[(i - 8)]) == 'l') || ((CallChecker.isCalled(a, char[].class, 393, 12920, 12920)[(i - 8)]) == 'L'))) && (((CallChecker.isCalled(a, char[].class, 394, 12948, 12948)[(i - 7)]) == 'i') || ((CallChecker.isCalled(a, char[].class, 394, 12967, 12967)[(i - 7)]) == 'I'))) && (((CallChecker.isCalled(a, char[].class, 395, 12995, 12995)[(i - 6)]) == 'f') || ((CallChecker.isCalled(a, char[].class, 395, 13014, 13014)[(i - 6)]) == 'F'))) && (((CallChecker.isCalled(a, char[].class, 396, 13042, 13042)[(i - 5)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 396, 13061, 13061)[(i - 5)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 397, 13089, 13089)[(i - 4)]) == 'c') || ((CallChecker.isCalled(a, char[].class, 397, 13108, 13108)[(i - 4)]) == 'C'))) && (((CallChecker.isCalled(a, char[].class, 398, 13136, 13136)[(i - 3)]) == 'y') || ((CallChecker.isCalled(a, char[].class, 398, 13155, 13155)[(i - 3)]) == 'Y'))) && (((CallChecker.isCalled(a, char[].class, 399, 13183, 13183)[(i - 2)]) == 'c') || ((CallChecker.isCalled(a, char[].class, 399, 13202, 13202)[(i - 2)]) == 'C'))) && (((CallChecker.isCalled(a, char[].class, 400, 13230, 13230)[(i - 1)]) == 'l') || ((CallChecker.isCalled(a, char[].class, 400, 13249, 13249)[(i - 1)]) == 'L'))) && (((CallChecker.isCalled(a, char[].class, 401, 13277, 13277)[i]) == 'e') || ((CallChecker.isCalled(a, char[].class, 401, 13292, 13292)[i]) == 'E'))) {
                                                                                                                                                                                                                                                                            matchlen = 18;
                                                                                                                                                                                                                                                                            CallChecker.varAssign(matchlen, "matchlen", 402, 13314, 13327);
                                                                                                                                                                                                                                                                            mask |= AdminPermission.ACTION_EXTENSIONLIFECYCLE;
                                                                                                                                                                                                                                                                            CallChecker.varAssign(mask, "mask", 403, 13335, 13368);
                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 406, 13404, 13404)) {
                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 406, 13423, 13423)) {
                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 407, 13452, 13452)) {
                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 407, 13471, 13471)) {
                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 408, 13500, 13500)) {
                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 408, 13519, 13519)) {
                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 409, 13548, 13548)) {
                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 409, 13567, 13567)) {
                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 410, 13596, 13596)) {
                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 410, 13615, 13615)) {
                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 411, 13644, 13644)) {
                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 411, 13663, 13663)) {
                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 412, 13692, 13692)) {
                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 412, 13711, 13711)) {
                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 413, 13740, 13740)) {
                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 413, 13759, 13759)) {
                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 414, 13788, 13788)) {
                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 414, 13803, 13803)) {
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 406, 13404, 13404);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 406, 13423, 13423);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 407, 13452, 13452);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 407, 13471, 13471);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 408, 13500, 13500);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 408, 13519, 13519);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 409, 13548, 13548);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 409, 13567, 13567);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 410, 13596, 13596);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 410, 13615, 13615);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 411, 13644, 13644);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 411, 13663, 13663);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 412, 13692, 13692);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 412, 13711, 13711);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 413, 13740, 13740);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 413, 13759, 13759);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 414, 13788, 13788);
                                                                                                                                                                                                                                                                                                                                                    a = CallChecker.beforeCalled(a, char[].class, 414, 13803, 13803);
                                                                                                                                                                                                                                                                                                                                                    if ((((((((((i >= 8) && (((CallChecker.isCalled(a, char[].class, 406, 13404, 13404)[(i - 8)]) == 'l') || ((CallChecker.isCalled(a, char[].class, 406, 13423, 13423)[(i - 8)]) == 'L'))) && (((CallChecker.isCalled(a, char[].class, 407, 13452, 13452)[(i - 7)]) == 'i') || ((CallChecker.isCalled(a, char[].class, 407, 13471, 13471)[(i - 7)]) == 'I'))) && (((CallChecker.isCalled(a, char[].class, 408, 13500, 13500)[(i - 6)]) == 'f') || ((CallChecker.isCalled(a, char[].class, 408, 13519, 13519)[(i - 6)]) == 'F'))) && (((CallChecker.isCalled(a, char[].class, 409, 13548, 13548)[(i - 5)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 409, 13567, 13567)[(i - 5)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 410, 13596, 13596)[(i - 4)]) == 'c') || ((CallChecker.isCalled(a, char[].class, 410, 13615, 13615)[(i - 4)]) == 'C'))) && (((CallChecker.isCalled(a, char[].class, 411, 13644, 13644)[(i - 3)]) == 'y') || ((CallChecker.isCalled(a, char[].class, 411, 13663, 13663)[(i - 3)]) == 'Y'))) && (((CallChecker.isCalled(a, char[].class, 412, 13692, 13692)[(i - 2)]) == 'c') || ((CallChecker.isCalled(a, char[].class, 412, 13711, 13711)[(i - 2)]) == 'C'))) && (((CallChecker.isCalled(a, char[].class, 413, 13740, 13740)[(i - 1)]) == 'l') || ((CallChecker.isCalled(a, char[].class, 413, 13759, 13759)[(i - 1)]) == 'L'))) && (((CallChecker.isCalled(a, char[].class, 414, 13788, 13788)[i]) == 'e') || ((CallChecker.isCalled(a, char[].class, 414, 13803, 13803)[i]) == 'E'))) {
                                                                                                                                                                                                                                                                                                                                                        matchlen = 9;
                                                                                                                                                                                                                                                                                                                                                        CallChecker.varAssign(matchlen, "matchlen", 415, 13826, 13838);
                                                                                                                                                                                                                                                                                                                                                        mask |= AdminPermission.ACTION_LIFECYCLE;
                                                                                                                                                                                                                                                                                                                                                        CallChecker.varAssign(mask, "mask", 416, 13847, 13871);
                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 419, 13909, 13909)) {
                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 419, 13928, 13928)) {
                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 420, 13958, 13958)) {
                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 420, 13977, 13977)) {
                                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 421, 14007, 14007)) {
                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 421, 14026, 14026)) {
                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 422, 14056, 14056)) {
                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 422, 14075, 14075)) {
                                                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 423, 14105, 14105)) {
                                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 423, 14124, 14124)) {
                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 424, 14154, 14154)) {
                                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 424, 14173, 14173)) {
                                                                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 425, 14203, 14203)) {
                                                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 425, 14222, 14222)) {
                                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 426, 14252, 14252)) {
                                                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 426, 14267, 14267)) {
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 419, 13909, 13909);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 419, 13928, 13928);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 420, 13958, 13958);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 420, 13977, 13977);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 421, 14007, 14007);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 421, 14026, 14026);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 422, 14056, 14056);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 422, 14075, 14075);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 423, 14105, 14105);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 423, 14124, 14124);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 424, 14154, 14154);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 424, 14173, 14173);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 425, 14203, 14203);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 425, 14222, 14222);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 426, 14252, 14252);
                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 426, 14267, 14267);
                                                                                                                                                                                                                                                                                                                                                                                                                        if (((((((((i >= 7) && (((CallChecker.isCalled(a, char[].class, 419, 13909, 13909)[(i - 7)]) == 'l') || ((CallChecker.isCalled(a, char[].class, 419, 13928, 13928)[(i - 7)]) == 'L'))) && (((CallChecker.isCalled(a, char[].class, 420, 13958, 13958)[(i - 6)]) == 'i') || ((CallChecker.isCalled(a, char[].class, 420, 13977, 13977)[(i - 6)]) == 'I'))) && (((CallChecker.isCalled(a, char[].class, 421, 14007, 14007)[(i - 5)]) == 's') || ((CallChecker.isCalled(a, char[].class, 421, 14026, 14026)[(i - 5)]) == 'S'))) && (((CallChecker.isCalled(a, char[].class, 422, 14056, 14056)[(i - 4)]) == 't') || ((CallChecker.isCalled(a, char[].class, 422, 14075, 14075)[(i - 4)]) == 'T'))) && (((CallChecker.isCalled(a, char[].class, 423, 14105, 14105)[(i - 3)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 423, 14124, 14124)[(i - 3)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 424, 14154, 14154)[(i - 2)]) == 'n') || ((CallChecker.isCalled(a, char[].class, 424, 14173, 14173)[(i - 2)]) == 'N'))) && (((CallChecker.isCalled(a, char[].class, 425, 14203, 14203)[(i - 1)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 425, 14222, 14222)[(i - 1)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 426, 14252, 14252)[i]) == 'r') || ((CallChecker.isCalled(a, char[].class, 426, 14267, 14267)[i]) == 'R'))) {
                                                                                                                                                                                                                                                                                                                                                                                                                            matchlen = 8;
                                                                                                                                                                                                                                                                                                                                                                                                                            CallChecker.varAssign(matchlen, "matchlen", 427, 14291, 14303);
                                                                                                                                                                                                                                                                                                                                                                                                                            mask |= AdminPermission.ACTION_LISTENER;
                                                                                                                                                                                                                                                                                                                                                                                                                            CallChecker.varAssign(mask, "mask", 428, 14313, 14336);
                                                                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 432, 14386, 14386)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 432, 14405, 14405)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 433, 14436, 14436)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 433, 14455, 14455)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 434, 14486, 14486)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 434, 14505, 14505)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 435, 14536, 14536)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 435, 14555, 14555)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 436, 14586, 14586)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 436, 14605, 14605)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 437, 14636, 14636)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 437, 14655, 14655)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 438, 14686, 14686)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 438, 14705, 14705)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 439, 14736, 14736)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 439, 14751, 14751)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 432, 14386, 14386);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 432, 14405, 14405);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 433, 14436, 14436);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 433, 14455, 14455);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 434, 14486, 14486);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 434, 14505, 14505);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 435, 14536, 14536);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 435, 14555, 14555);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 436, 14586, 14586);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 436, 14605, 14605);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 437, 14636, 14636);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 437, 14655, 14655);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 438, 14686, 14686);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 438, 14705, 14705);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 439, 14736, 14736);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 439, 14751, 14751);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (((((((((i >= 7) && (((CallChecker.isCalled(a, char[].class, 432, 14386, 14386)[(i - 7)]) == 'm') || ((CallChecker.isCalled(a, char[].class, 432, 14405, 14405)[(i - 7)]) == 'M'))) && (((CallChecker.isCalled(a, char[].class, 433, 14436, 14436)[(i - 6)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 433, 14455, 14455)[(i - 6)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 434, 14486, 14486)[(i - 5)]) == 't') || ((CallChecker.isCalled(a, char[].class, 434, 14505, 14505)[(i - 5)]) == 'T'))) && (((CallChecker.isCalled(a, char[].class, 435, 14536, 14536)[(i - 4)]) == 'a') || ((CallChecker.isCalled(a, char[].class, 435, 14555, 14555)[(i - 4)]) == 'A'))) && (((CallChecker.isCalled(a, char[].class, 436, 14586, 14586)[(i - 3)]) == 'd') || ((CallChecker.isCalled(a, char[].class, 436, 14605, 14605)[(i - 3)]) == 'D'))) && (((CallChecker.isCalled(a, char[].class, 437, 14636, 14636)[(i - 2)]) == 'a') || ((CallChecker.isCalled(a, char[].class, 437, 14655, 14655)[(i - 2)]) == 'A'))) && (((CallChecker.isCalled(a, char[].class, 438, 14686, 14686)[(i - 1)]) == 't') || ((CallChecker.isCalled(a, char[].class, 438, 14705, 14705)[(i - 1)]) == 'T'))) && (((CallChecker.isCalled(a, char[].class, 439, 14736, 14736)[i]) == 'a') || ((CallChecker.isCalled(a, char[].class, 439, 14751, 14751)[i]) == 'A'))) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                matchlen = 8;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                CallChecker.varAssign(matchlen, "matchlen", 440, 14776, 14788);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                mask |= AdminPermission.ACTION_METADATA;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                CallChecker.varAssign(mask, "mask", 441, 14799, 14822);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 445, 14875, 14875)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 445, 14894, 14894)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (CallChecker.beforeDeref(a, char[].class, 446, 14926, 14926)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 446, 14945, 14945)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 447, 14977, 14977)) {
if (CallChecker.beforeDeref(a, char[].class, 447, 14996, 14996)) {
if (CallChecker.beforeDeref(a, char[].class, 448, 15028, 15028)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (CallChecker.beforeDeref(a, char[].class, 448, 15047, 15047)) {
if (CallChecker.beforeDeref(a, char[].class, 449, 15079, 15079)) {
if (CallChecker.beforeDeref(a, char[].class, 449, 15098, 15098)) {
if (CallChecker.beforeDeref(a, char[].class, 450, 15130, 15130)) {
if (CallChecker.beforeDeref(a, char[].class, 450, 15149, 15149)) {
if (CallChecker.beforeDeref(a, char[].class, 451, 15181, 15181)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (CallChecker.beforeDeref(a, char[].class, 451, 15196, 15196)) {
a = CallChecker.beforeCalled(a, char[].class, 445, 14875, 14875);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 445, 14894, 14894);
a = CallChecker.beforeCalled(a, char[].class, 446, 14926, 14926);
a = CallChecker.beforeCalled(a, char[].class, 446, 14945, 14945);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 447, 14977, 14977);
a = CallChecker.beforeCalled(a, char[].class, 447, 14996, 14996);
a = CallChecker.beforeCalled(a, char[].class, 448, 15028, 15028);
a = CallChecker.beforeCalled(a, char[].class, 448, 15047, 15047);
a = CallChecker.beforeCalled(a, char[].class, 449, 15079, 15079);
a = CallChecker.beforeCalled(a, char[].class, 449, 15098, 15098);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 450, 15130, 15130);
a = CallChecker.beforeCalled(a, char[].class, 450, 15149, 15149);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 451, 15181, 15181);
a = CallChecker.beforeCalled(a, char[].class, 451, 15196, 15196);
if ((((((((i >= 6) && (((CallChecker.isCalled(a, char[].class, 445, 14875, 14875)[(i - 6)]) == 'r') || ((CallChecker.isCalled(a, char[].class, 445, 14894, 14894)[(i - 6)]) == 'R'))) && (((CallChecker.isCalled(a, char[].class, 446, 14926, 14926)[(i - 5)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 446, 14945, 14945)[(i - 5)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 447, 14977, 14977)[(i - 4)]) == 's') || ((CallChecker.isCalled(a, char[].class, 447, 14996, 14996)[(i - 4)]) == 'S'))) && (((CallChecker.isCalled(a, char[].class, 448, 15028, 15028)[(i - 3)]) == 'o') || ((CallChecker.isCalled(a, char[].class, 448, 15047, 15047)[(i - 3)]) == 'O'))) && (((CallChecker.isCalled(a, char[].class, 449, 15079, 15079)[(i - 2)]) == 'l') || ((CallChecker.isCalled(a, char[].class, 449, 15098, 15098)[(i - 2)]) == 'L'))) && (((CallChecker.isCalled(a, char[].class, 450, 15130, 15130)[(i - 1)]) == 'v') || ((CallChecker.isCalled(a, char[].class, 450, 15149, 15149)[(i - 1)]) == 'V'))) && (((CallChecker.isCalled(a, char[].class, 451, 15181, 15181)[i]) == 'e') || ((CallChecker.isCalled(a, char[].class, 451, 15196, 15196)[i]) == 'E'))) {
matchlen = 7;
allChecker.varAssign(matchlen, "matchlen", 452, 15222, 15234);
mask |= AdminPermission.ACTION_RESOLVE;
allChecker.varAssign(mask, "mask", 453, 15246, 15268);
}else
if (CallChecker.beforeDeref(a, char[].class, 457, 15324, 15324)) {
if (CallChecker.beforeDeref(a, char[].class, 457, 15343, 15343)) {
if (CallChecker.beforeDeref(a, char[].class, 458, 15376, 15376)) {
if (CallChecker.beforeDeref(a, char[].class, 458, 15395, 15395)) {
if (CallChecker.beforeDeref(a, char[].class, 459, 15428, 15428)) {
if (CallChecker.beforeDeref(a, char[].class, 459, 15447, 15447)) {
if (CallChecker.beforeDeref(a, char[].class, 460, 15480, 15480)) {
if (CallChecker.beforeDeref(a, char[].class, 460, 15499, 15499)) {
if (CallChecker.beforeDeref(a, char[].class, 461, 15532, 15532)) {
if (CallChecker.beforeDeref(a, char[].class, 461, 15551, 15551)) {
if (CallChecker.beforeDeref(a, char[].class, 462, 15584, 15584)) {
if (CallChecker.beforeDeref(a, char[].class, 462, 15603, 15603)) {
if (CallChecker.beforeDeref(a, char[].class, 463, 15636, 15636)) {
if (CallChecker.beforeDeref(a, char[].class, 463, 15655, 15655)) {
if (CallChecker.beforeDeref(a, char[].class, 464, 15688, 15688)) {
if (CallChecker.beforeDeref(a, char[].class, 464, 15703, 15703)) {
a = CallChecker.beforeCalled(a, char[].class, 457, 15324, 15324);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 457, 15343, 15343);
a = CallChecker.beforeCalled(a, char[].class, 458, 15376, 15376);
a = CallChecker.beforeCalled(a, char[].class, 458, 15395, 15395);
a = CallChecker.beforeCalled(a, char[].class, 459, 15428, 15428);
a = CallChecker.beforeCalled(a, char[].class, 459, 15447, 15447);
a = CallChecker.beforeCalled(a, char[].class, 460, 15480, 15480);
a = CallChecker.beforeCalled(a, char[].class, 460, 15499, 15499);
a = CallChecker.beforeCalled(a, char[].class, 461, 15532, 15532);
a = CallChecker.beforeCalled(a, char[].class, 461, 15551, 15551);
a = CallChecker.beforeCalled(a, char[].class, 462, 15584, 15584);
a = CallChecker.beforeCalled(a, char[].class, 462, 15603, 15603);
a = CallChecker.beforeCalled(a, char[].class, 463, 15636, 15636);
a = CallChecker.beforeCalled(a, char[].class, 463, 15655, 15655);
a = CallChecker.beforeCalled(a, char[].class, 464, 15688, 15688);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 464, 15703, 15703);
if (((((((((i >= 7) && (((CallChecker.isCalled(a, char[].class, 457, 15324, 15324)[(i - 7)]) == 'r') || ((CallChecker.isCalled(a, char[].class, 457, 15343, 15343)[(i - 7)]) == 'R'))) && (((CallChecker.isCalled(a, char[].class, 458, 15376, 15376)[(i - 6)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 458, 15395, 15395)[(i - 6)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 459, 15428, 15428)[(i - 5)]) == 's') || ((CallChecker.isCalled(a, char[].class, 459, 15447, 15447)[(i - 5)]) == 'S'))) && (((CallChecker.isCalled(a, char[].class, 460, 15480, 15480)[(i - 4)]) == 'o') || ((CallChecker.isCalled(a, char[].class, 460, 15499, 15499)[(i - 4)]) == 'O'))) && (((CallChecker.isCalled(a, char[].class, 461, 15532, 15532)[(i - 3)]) == 'u') || ((CallChecker.isCalled(a, char[].class, 461, 15551, 15551)[(i - 3)]) == 'U'))) && (((CallChecker.isCalled(a, char[].class, 462, 15584, 15584)[(i - 2)]) == 'r') || ((CallChecker.isCalled(a, char[].class, 462, 15603, 15603)[(i - 2)]) == 'R'))) && (((CallChecker.isCalled(a, char[].class, 463, 15636, 15636)[(i - 1)]) == 'c') || ((CallChecker.isCalled(a, char[].class, 463, 15655, 15655)[(i - 1)]) == 'C'))) && (((CallChecker.isCalled(a, char[].class, 464, 15688, 15688)[i]) == 'e') || ((CallChecker.isCalled(a, char[].class, 464, 15703, 15703)[i]) == 'E'))) {
matchlen = 8;
allChecker.varAssign(matchlen, "matchlen", 465, 15730, 15742);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                mask |= (AdminPermission.ACTION_RESOURCE) | (AdminPermission.ACTION_RESOLVE);
allChecker.varAssign(mask, "mask", 466, 15755, 15808);
}else
if (CallChecker.beforeDeref(a, char[].class, 471, 15867, 15867)) {
if (CallChecker.beforeDeref(a, char[].class, 471, 15886, 15886)) {
if (CallChecker.beforeDeref(a, char[].class, 472, 15920, 15920)) {
if (CallChecker.beforeDeref(a, char[].class, 472, 15939, 15939)) {
if (CallChecker.beforeDeref(a, char[].class, 473, 15973, 15973)) {
if (CallChecker.beforeDeref(a, char[].class, 473, 15992, 15992)) {
if (CallChecker.beforeDeref(a, char[].class, 474, 16026, 16026)) {
if (CallChecker.beforeDeref(a, char[].class, 474, 16045, 16045)) {
if (CallChecker.beforeDeref(a, char[].class, 475, 16079, 16079)) {
if (CallChecker.beforeDeref(a, char[].class, 475, 16098, 16098)) {
if (CallChecker.beforeDeref(a, char[].class, 476, 16132, 16132)) {
if (CallChecker.beforeDeref(a, char[].class, 476, 16151, 16151)) {
if (CallChecker.beforeDeref(a, char[].class, 477, 16185, 16185)) {
if (CallChecker.beforeDeref(a, char[].class, 477, 16204, 16204)) {
if (CallChecker.beforeDeref(a, char[].class, 478, 16238, 16238)) {
if (CallChecker.beforeDeref(a, char[].class, 478, 16257, 16257)) {
if (CallChecker.beforeDeref(a, char[].class, 479, 16291, 16291)) {
if (CallChecker.beforeDeref(a, char[].class, 479, 16310, 16310)) {
if (CallChecker.beforeDeref(a, char[].class, 480, 16344, 16344)) {
if (CallChecker.beforeDeref(a, char[].class, 480, 16359, 16359)) {
a = CallChecker.beforeCalled(a, char[].class, 471, 15867, 15867);
a = CallChecker.beforeCalled(a, char[].class, 471, 15886, 15886);
a = CallChecker.beforeCalled(a, char[].class, 472, 15920, 15920);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                a = CallChecker.beforeCalled(a, char[].class, 472, 15939, 15939);
a = CallChecker.beforeCalled(a, char[].class, 473, 15973, 15973);
a = CallChecker.beforeCalled(a, char[].class, 473, 15992, 15992);
a = CallChecker.beforeCalled(a, char[].class, 474, 16026, 16026);
a = CallChecker.beforeCalled(a, char[].class, 474, 16045, 16045);
a = CallChecker.beforeCalled(a, char[].class, 475, 16079, 16079);
a = CallChecker.beforeCalled(a, char[].class, 475, 16098, 16098);
a = CallChecker.beforeCalled(a, char[].class, 476, 16132, 16132);
a = CallChecker.beforeCalled(a, char[].class, 476, 16151, 16151);
a = CallChecker.beforeCalled(a, char[].class, 477, 16185, 16185);
a = CallChecker.beforeCalled(a, char[].class, 477, 16204, 16204);
a = CallChecker.beforeCalled(a, char[].class, 478, 16238, 16238);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                a = CallChecker.beforeCalled(a, char[].class, 478, 16257, 16257);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                a = CallChecker.beforeCalled(a, char[].class, 479, 16291, 16291);
a = CallChecker.beforeCalled(a, char[].class, 479, 16310, 16310);
a = CallChecker.beforeCalled(a, char[].class, 480, 16344, 16344);
a = CallChecker.beforeCalled(a, char[].class, 480, 16359, 16359);
if (((((((((((i >= 9) && (((CallChecker.isCalled(a, char[].class, 471, 15867, 15867)[(i - 9)]) == 's') || ((CallChecker.isCalled(a, char[].class, 471, 15886, 15886)[(i - 9)]) == 'S'))) && (((CallChecker.isCalled(a, char[].class, 472, 15920, 15920)[(i - 8)]) == 't') || ((CallChecker.isCalled(a, char[].class, 472, 15939, 15939)[(i - 8)]) == 'T'))) && (((CallChecker.isCalled(a, char[].class, 473, 15973, 15973)[(i - 7)]) == 'a') || ((CallChecker.isCalled(a, char[].class, 473, 15992, 15992)[(i - 7)]) == 'A'))) && (((CallChecker.isCalled(a, char[].class, 474, 16026, 16026)[(i - 6)]) == 'r') || ((CallChecker.isCalled(a, char[].class, 474, 16045, 16045)[(i - 6)]) == 'R'))) && (((CallChecker.isCalled(a, char[].class, 475, 16079, 16079)[(i - 5)]) == 't') || ((CallChecker.isCalled(a, char[].class, 475, 16098, 16098)[(i - 5)]) == 'T'))) && (((CallChecker.isCalled(a, char[].class, 476, 16132, 16132)[(i - 4)]) == 'l') || ((CallChecker.isCalled(a, char[].class, 476, 16151, 16151)[(i - 4)]) == 'L'))) && (((CallChecker.isCalled(a, char[].class, 477, 16185, 16185)[(i - 3)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 477, 16204, 16204)[(i - 3)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 478, 16238, 16238)[(i - 2)]) == 'v') || ((CallChecker.isCalled(a, char[].class, 478, 16257, 16257)[(i - 2)]) == 'V'))) && (((CallChecker.isCalled(a, char[].class, 479, 16291, 16291)[(i - 1)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 479, 16310, 16310)[(i - 1)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 480, 16344, 16344)[i]) == 'l') || ((CallChecker.isCalled(a, char[].class, 480, 16359, 16359)[i]) == 'L'))) {
matchlen = 10;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    CallChecker.varAssign(matchlen, "matchlen", 481, 16387, 16400);
mask |= AdminPermission.ACTION_STARTLEVEL;
allChecker.varAssign(mask, "mask", 482, 16414, 16439);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }else
if (CallChecker.beforeDeref(a, char[].class, 486, 16501, 16501)) {
if (CallChecker.beforeDeref(a, char[].class, 486, 16520, 16520)) {
if (CallChecker.beforeDeref(a, char[].class, 487, 16555, 16555)) {
if (CallChecker.beforeDeref(a, char[].class, 487, 16574, 16574)) {
if (CallChecker.beforeDeref(a, char[].class, 488, 16609, 16609)) {
if (CallChecker.beforeDeref(a, char[].class, 488, 16628, 16628)) {
if (CallChecker.beforeDeref(a, char[].class, 489, 16663, 16663)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (CallChecker.beforeDeref(a, char[].class, 489, 16682, 16682)) {
if (CallChecker.beforeDeref(a, char[].class, 490, 16717, 16717)) {
if (CallChecker.beforeDeref(a, char[].class, 490, 16736, 16736)) {
if (CallChecker.beforeDeref(a, char[].class, 491, 16771, 16771)) {
if (CallChecker.beforeDeref(a, char[].class, 491, 16790, 16790)) {
if (CallChecker.beforeDeref(a, char[].class, 492, 16825, 16825)) {
if (CallChecker.beforeDeref(a, char[].class, 492, 16840, 16840)) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 486, 16501, 16501);
a = CallChecker.beforeCalled(a, char[].class, 486, 16520, 16520);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            a = CallChecker.beforeCalled(a, char[].class, 487, 16555, 16555);
a = CallChecker.beforeCalled(a, char[].class, 487, 16574, 16574);
a = CallChecker.beforeCalled(a, char[].class, 488, 16609, 16609);
a = CallChecker.beforeCalled(a, char[].class, 488, 16628, 16628);
a = CallChecker.beforeCalled(a, char[].class, 489, 16663, 16663);
a = CallChecker.beforeCalled(a, char[].class, 489, 16682, 16682);
a = CallChecker.beforeCalled(a, char[].class, 490, 16717, 16717);
a = CallChecker.beforeCalled(a, char[].class, 490, 16736, 16736);
a = CallChecker.beforeCalled(a, char[].class, 491, 16771, 16771);
a = CallChecker.beforeCalled(a, char[].class, 491, 16790, 16790);
a = CallChecker.beforeCalled(a, char[].class, 492, 16825, 16825);
a = CallChecker.beforeCalled(a, char[].class, 492, 16840, 16840);
if ((((((((i >= 6) && (((CallChecker.isCalled(a, char[].class, 486, 16501, 16501)[(i - 6)]) == 'c') || ((CallChecker.isCalled(a, char[].class, 486, 16520, 16520)[(i - 6)]) == 'C'))) && (((CallChecker.isCalled(a, char[].class, 487, 16555, 16555)[(i - 5)]) == 'o') || ((CallChecker.isCalled(a, char[].class, 487, 16574, 16574)[(i - 5)]) == 'O'))) && (((CallChecker.isCalled(a, char[].class, 488, 16609, 16609)[(i - 4)]) == 'n') || ((CallChecker.isCalled(a, char[].class, 488, 16628, 16628)[(i - 4)]) == 'N'))) && (((CallChecker.isCalled(a, char[].class, 489, 16663, 16663)[(i - 3)]) == 't') || ((CallChecker.isCalled(a, char[].class, 489, 16682, 16682)[(i - 3)]) == 'T'))) && (((CallChecker.isCalled(a, char[].class, 490, 16717, 16717)[(i - 2)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 490, 16736, 16736)[(i - 2)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 491, 16771, 16771)[(i - 1)]) == 'x') || ((CallChecker.isCalled(a, char[].class, 491, 16790, 16790)[(i - 1)]) == 'X'))) && (((CallChecker.isCalled(a, char[].class, 492, 16825, 16825)[i]) == 't') || ((CallChecker.isCalled(a, char[].class, 492, 16840, 16840)[i]) == 'T'))) {
matchlen = 7;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                CallChecker.varAssign(matchlen, "matchlen", 493, 16869, 16881);
mask |= AdminPermission.ACTION_CONTEXT;
allChecker.varAssign(mask, "mask", 494, 16896, 16918);
}else
if (CallChecker.beforeDeref(a, char[].class, 498, 16983, 16983)) {
if (CallChecker.beforeDeref(a, char[].class, 498, 17002, 17002)) {
if (CallChecker.beforeDeref(a, char[].class, 499, 17038, 17038)) {
if (CallChecker.beforeDeref(a, char[].class, 499, 17057, 17057)) {
if (CallChecker.beforeDeref(a, char[].class, 500, 17093, 17093)) {
if (CallChecker.beforeDeref(a, char[].class, 500, 17112, 17112)) {
if (CallChecker.beforeDeref(a, char[].class, 501, 17148, 17148)) {
if (CallChecker.beforeDeref(a, char[].class, 501, 17167, 17167)) {
if (CallChecker.beforeDeref(a, char[].class, 502, 17203, 17203)) {
if (CallChecker.beforeDeref(a, char[].class, 502, 17218, 17218)) {
a = CallChecker.beforeCalled(a, char[].class, 498, 16983, 16983);
a = CallChecker.beforeCalled(a, char[].class, 498, 17002, 17002);
a = CallChecker.beforeCalled(a, char[].class, 499, 17038, 17038);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        a = CallChecker.beforeCalled(a, char[].class, 499, 17057, 17057);
a = CallChecker.beforeCalled(a, char[].class, 500, 17093, 17093);
a = CallChecker.beforeCalled(a, char[].class, 500, 17112, 17112);
a = CallChecker.beforeCalled(a, char[].class, 501, 17148, 17148);
a = CallChecker.beforeCalled(a, char[].class, 501, 17167, 17167);
a = CallChecker.beforeCalled(a, char[].class, 502, 17203, 17203);
a = CallChecker.beforeCalled(a, char[].class, 502, 17218, 17218);
if ((((((i >= 4) && (((CallChecker.isCalled(a, char[].class, 498, 16983, 16983)[(i - 4)]) == 'w') || ((CallChecker.isCalled(a, char[].class, 498, 17002, 17002)[(i - 4)]) == 'W'))) && (((CallChecker.isCalled(a, char[].class, 499, 17038, 17038)[(i - 3)]) == 'e') || ((CallChecker.isCalled(a, char[].class, 499, 17057, 17057)[(i - 3)]) == 'E'))) && (((CallChecker.isCalled(a, char[].class, 500, 17093, 17093)[(i - 2)]) == 'a') || ((CallChecker.isCalled(a, char[].class, 500, 17112, 17112)[(i - 2)]) == 'A'))) && (((CallChecker.isCalled(a, char[].class, 501, 17148, 17148)[(i - 1)]) == 'v') || ((CallChecker.isCalled(a, char[].class, 501, 17167, 17167)[(i - 1)]) == 'V'))) && (((CallChecker.isCalled(a, char[].class, 502, 17203, 17203)[i]) == 'e') || ((CallChecker.isCalled(a, char[].class, 502, 17218, 17218)[i]) == 'E'))) {
matchlen = 5;
allChecker.varAssign(matchlen, "matchlen", 503, 17248, 17260);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            mask |= AdminPermission.ACTION_WEAVE;
allChecker.varAssign(mask, "mask", 504, 17276, 17296);
}else
if (CallChecker.beforeDeref(a, char[].class, 507, 17348, 17348)) {
a = CallChecker.beforeCalled(a, char[].class, 507, 17348, 17348);
if ((i >= 0) && ((CallChecker.isCalled(a, char[].class, 507, 17348, 17348)[i]) == '*')) {
matchlen = 1;
allChecker.varAssign(matchlen, "matchlen", 508, 17379, 17391);
mask |= AdminPermission.ACTION_ALL;
allChecker.varAssign(mask, "mask", 509, 17408, 17426);
}else {
throw new IllegalArgumentException(("invalid permission: " + actions));
}
}else
throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();


}else
throw new AbnormalExecutionError();

}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();

}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
throw new AbnormalExecutionError();

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();


}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();

}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
}else
throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();


}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();


}else
throw new AbnormalExecutionError();

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

}else
throw new AbnormalExecutionError();

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                }else
                                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                                
                                                                                                                                                                                                                            }else
                                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                                            
                                                                                                                                                                                                                        }else
                                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                                        
                                                                                                                                                                                                                    }else
                                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                                    
                                                                                                                                                                                                                }else
                                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                                
                                                                                                                                                                                                            }else
                                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                                            
                                                                                                                                                                                                        }else
                                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                                        
                                                                                                                                                                                                    }else
                                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                                    
                                                                                                                                                                                                }else
                                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                                
                                                                                                                                                                                            }else
                                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                                            
                                                                                                                                                                                        }else
                                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                                        
                                                                                                                                                                                    }else
                                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                                    
                                                                                                                                                                                }else
                                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                                
                                                                                                                                                                            }else
                                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                                            
                                                                                                                                                                        }else
                                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                                        
                                                                                                                                                                    }else
                                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                                    
                                                                                                                                                                }else
                                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                                
                                                                                                                                                            }else
                                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                                            
                                                                                                                                                        }else
                                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                                        
                                                                                                                                                    }else
                                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                                    
                                                                                                                                                }else
                                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                                
                                                                                                                                            }else
                                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                                            
                                                                                                                                        }else
                                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                                        
                                                                                                                                    }else
                                                                                                                                        throw new AbnormalExecutionError();
                                                                                                                                    
                                                                                                                                }else
                                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                                
                                                                                                                            }else
                                                                                                                                throw new AbnormalExecutionError();
                                                                                                                            
                                                                                                                        }else
                                                                                                                            throw new AbnormalExecutionError();
                                                                                                                        
                                                                                                                    
                                                                                                                }else
                                                                                                                    throw new AbnormalExecutionError();
                                                                                                                
                                                                                                            }else
                                                                                                                throw new AbnormalExecutionError();
                                                                                                            
                                                                                                        }else
                                                                                                            throw new AbnormalExecutionError();
                                                                                                        
                                                                                                    }else
                                                                                                        throw new AbnormalExecutionError();
                                                                                                    
                                                                                                }else
                                                                                                    throw new AbnormalExecutionError();
                                                                                                
                                                                                            }else
                                                                                                throw new AbnormalExecutionError();
                                                                                            
                                                                                        }else
                                                                                            throw new AbnormalExecutionError();
                                                                                        
                                                                                    }else
                                                                                        throw new AbnormalExecutionError();
                                                                                    
                                                                                }else
                                                                                    throw new AbnormalExecutionError();
                                                                                
                                                                            }else
                                                                                throw new AbnormalExecutionError();
                                                                            
                                                                        }else
                                                                            throw new AbnormalExecutionError();
                                                                        
                                                                    }else
                                                                        throw new AbnormalExecutionError();
                                                                    
                                                                }else
                                                                    throw new AbnormalExecutionError();
                                                                
                                                            }else
                                                                throw new AbnormalExecutionError();
                                                            
                                                        
                                                    }else
                                                        throw new AbnormalExecutionError();
                                                    
                                                }else
                                                    throw new AbnormalExecutionError();
                                                
                                            }else
                                                throw new AbnormalExecutionError();
                                            
                                        }else
                                            throw new AbnormalExecutionError();
                                        
                                    }else
                                        throw new AbnormalExecutionError();
                                    
                                }else
                                    throw new AbnormalExecutionError();
                                
                            }else
                                throw new AbnormalExecutionError();
                            
                        }else
                            throw new AbnormalExecutionError();
                        
                    }else
                        throw new AbnormalExecutionError();
                    
                }else
                    throw new AbnormalExecutionError();
                
                seencomma = false;
                CallChecker.varAssign(seencomma, "seencomma", 518, 17700, 17717);
                while ((i >= matchlen) && (!seencomma)) {
                    if (CallChecker.beforeDeref(a, char[].class, 520, 17772, 17772)) {
                        a = CallChecker.beforeCalled(a, char[].class, 520, 17772, 17772);
                        switch (CallChecker.isCalled(a, char[].class, 520, 17772, 17772)[(i - matchlen)]) {
                            case ',' :
                                seencomma = true;
                                CallChecker.varAssign(seencomma, "seencomma", 522, 17813, 17829);
                            case ' ' :
                            case '\r' :
                            case '\n' :
                            case '\f' :
                            case '\t' :
                                break;
                            default :
                                throw new IllegalArgumentException(("invalid permission: " + actions));
                        }
                    }else
                        throw new AbnormalExecutionError();
                    
                    i--;
                } 
                i -= matchlen;
                CallChecker.varAssign(i, "i", 537, 18129, 18142);
            } 
            if (seencomma) {
                throw new IllegalArgumentException(("invalid permission: " + actions));
            }
            return mask;
        } catch (ForceReturn _bcornu_return_t) {
            return ((Integer) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context773.methodEnd();
        }
    }

    private static Filter parseFilter(String filterString) {
        MethodContext _bcornu_methode_context774 = new MethodContext(Filter.class);
        try {
            CallChecker.varInit(filterString, "filterString", 556, 18266, 19047);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 556, 18266, 19047);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 556, 18266, 19047);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 556, 18266, 19047);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 556, 18266, 19047);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 556, 18266, 19047);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 556, 18266, 19047);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 556, 18266, 19047);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 556, 18266, 19047);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 556, 18266, 19047);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 556, 18266, 19047);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 556, 18266, 19047);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 556, 18266, 19047);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 556, 18266, 19047);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 556, 18266, 19047);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 556, 18266, 19047);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 556, 18266, 19047);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 556, 18266, 19047);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 556, 18266, 19047);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 556, 18266, 19047);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 556, 18266, 19047);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 556, 18266, 19047);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 556, 18266, 19047);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 556, 18266, 19047);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 556, 18266, 19047);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 556, 18266, 19047);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 556, 18266, 19047);
            if (filterString == null) {
                return null;
            }
            filterString = filterString.trim();
            CallChecker.varAssign(filterString, "filterString", 560, 18735, 18769);
            if (filterString.equals("*")) {
                return null;
            }
            TryContext _bcornu_try_context_275 = new TryContext(275, AdminPermission.class, "org.osgi.framework.InvalidSyntaxException");
            try {
                return FrameworkUtil.createFilter(filterString);
            } catch (InvalidSyntaxException e) {
                _bcornu_try_context_275.catchStart(275);
                IllegalArgumentException iae = CallChecker.varInit(new IllegalArgumentException("invalid filter"), "iae", 568, 18928, 19005);
                if (CallChecker.beforeDeref(iae, IllegalArgumentException.class, 569, 19010, 19012)) {
                    iae = CallChecker.beforeCalled(iae, IllegalArgumentException.class, 569, 19010, 19012);
                    CallChecker.isCalled(iae, IllegalArgumentException.class, 569, 19010, 19012).initCause(e);
                }
                throw iae;
            } finally {
                _bcornu_try_context_275.finallyStart(275);
            }
        } catch (ForceReturn _bcornu_return_t) {
            return ((Filter) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context774.methodEnd();
        }
    }

    @Override
    public boolean implies(Permission p) {
        MethodContext _bcornu_methode_context775 = new MethodContext(boolean.class);
        try {
            CallChecker.varInit(this, "this", 601, 19051, 20445);
            CallChecker.varInit(p, "p", 601, 19051, 20445);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 601, 19051, 20445);
            CallChecker.varInit(this.properties, "properties", 601, 19051, 20445);
            CallChecker.varInit(this.bundle, "bundle", 601, 19051, 20445);
            CallChecker.varInit(this.filter, "filter", 601, 19051, 20445);
            CallChecker.varInit(this.action_mask, "action_mask", 601, 19051, 20445);
            CallChecker.varInit(this.actions, "actions", 601, 19051, 20445);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 601, 19051, 20445);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 601, 19051, 20445);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 601, 19051, 20445);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 601, 19051, 20445);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 601, 19051, 20445);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 601, 19051, 20445);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 601, 19051, 20445);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 601, 19051, 20445);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 601, 19051, 20445);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 601, 19051, 20445);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 601, 19051, 20445);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 601, 19051, 20445);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 601, 19051, 20445);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 601, 19051, 20445);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 601, 19051, 20445);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 601, 19051, 20445);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 601, 19051, 20445);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 601, 19051, 20445);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 601, 19051, 20445);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 601, 19051, 20445);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 601, 19051, 20445);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 601, 19051, 20445);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 601, 19051, 20445);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 601, 19051, 20445);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 601, 19051, 20445);
            if (!(p instanceof AdminPermission)) {
                return false;
            }
            AdminPermission requested = CallChecker.varInit(((AdminPermission) (p)), "requested", 605, 20178, 20225);
            if ((bundle) != null) {
                return false;
            }
            if (CallChecker.beforeDeref(requested, AdminPermission.class, 610, 20352, 20360)) {
                requested = CallChecker.beforeCalled(requested, AdminPermission.class, 610, 20352, 20360);
                if ((CallChecker.isCalled(requested, AdminPermission.class, 610, 20352, 20360).filter) != null) {
                    return false;
                }
            }else
                throw new AbnormalExecutionError();
            
            return implies0(requested, AdminPermission.ACTION_NONE);
        } catch (ForceReturn _bcornu_return_t) {
            return ((Boolean) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context775.methodEnd();
        }
    }

    boolean implies0(AdminPermission requested, int effective) {
        MethodContext _bcornu_methode_context776 = new MethodContext(boolean.class);
        try {
            CallChecker.varInit(this, "this", 627, 20449, 21786);
            CallChecker.varInit(effective, "effective", 627, 20449, 21786);
            CallChecker.varInit(requested, "requested", 627, 20449, 21786);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 627, 20449, 21786);
            CallChecker.varInit(this.properties, "properties", 627, 20449, 21786);
            CallChecker.varInit(this.bundle, "bundle", 627, 20449, 21786);
            CallChecker.varInit(this.filter, "filter", 627, 20449, 21786);
            CallChecker.varInit(this.action_mask, "action_mask", 627, 20449, 21786);
            CallChecker.varInit(this.actions, "actions", 627, 20449, 21786);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 627, 20449, 21786);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 627, 20449, 21786);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 627, 20449, 21786);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 627, 20449, 21786);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 627, 20449, 21786);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 627, 20449, 21786);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 627, 20449, 21786);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 627, 20449, 21786);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 627, 20449, 21786);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 627, 20449, 21786);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 627, 20449, 21786);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 627, 20449, 21786);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 627, 20449, 21786);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 627, 20449, 21786);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 627, 20449, 21786);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 627, 20449, 21786);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 627, 20449, 21786);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 627, 20449, 21786);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 627, 20449, 21786);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 627, 20449, 21786);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 627, 20449, 21786);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 627, 20449, 21786);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 627, 20449, 21786);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 627, 20449, 21786);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 627, 20449, 21786);
            effective |= action_mask;
            CallChecker.varAssign(effective, "effective", 629, 21040, 21064);
            requested = CallChecker.beforeCalled(requested, AdminPermission.class, 630, 21088, 21096);
            final int desired = CallChecker.varInit(((int) (CallChecker.isCalled(requested, AdminPermission.class, 630, 21088, 21096).action_mask)), "desired", 630, 21068, 21109);
            if ((effective & desired) != desired) {
                return false;
            }
            Filter f = CallChecker.varInit(filter, "f", 636, 21200, 21217);
            if (f == null) {
                return true;
            }
            if (CallChecker.beforeDeref(requested, AdminPermission.class, 642, 21319, 21327)) {
                requested = CallChecker.beforeCalled(requested, AdminPermission.class, 642, 21319, 21327);
                if ((CallChecker.isCalled(requested, AdminPermission.class, 642, 21319, 21327).bundle) == null) {
                    return false;
                }
            }else
                throw new AbnormalExecutionError();
            
            Map<String, Object> requestedProperties = CallChecker.init(Map.class);
            if (CallChecker.beforeDeref(requested, AdminPermission.class, 645, 21412, 21420)) {
                requested = CallChecker.beforeCalled(requested, AdminPermission.class, 645, 21412, 21420);
                requestedProperties = CallChecker.isCalled(requested, AdminPermission.class, 645, 21412, 21420).getProperties();
                CallChecker.varAssign(requestedProperties, "requestedProperties", 645, 21412, 21420);
            }
            if (requestedProperties == null) {
                return true;
            }
            return f.matches(requestedProperties);
        } catch (ForceReturn _bcornu_return_t) {
            return ((Boolean) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context776.methodEnd();
        }
    }

    @Override
    public String getActions() {
        MethodContext _bcornu_methode_context777 = new MethodContext(String.class);
        try {
            CallChecker.varInit(this, "this", 672, 21790, 23784);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 672, 21790, 23784);
            CallChecker.varInit(this.properties, "properties", 672, 21790, 23784);
            CallChecker.varInit(this.bundle, "bundle", 672, 21790, 23784);
            CallChecker.varInit(this.filter, "filter", 672, 21790, 23784);
            CallChecker.varInit(this.action_mask, "action_mask", 672, 21790, 23784);
            CallChecker.varInit(this.actions, "actions", 672, 21790, 23784);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 672, 21790, 23784);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 672, 21790, 23784);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 672, 21790, 23784);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 672, 21790, 23784);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 672, 21790, 23784);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 672, 21790, 23784);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 672, 21790, 23784);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 672, 21790, 23784);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 672, 21790, 23784);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 672, 21790, 23784);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 672, 21790, 23784);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 672, 21790, 23784);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 672, 21790, 23784);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 672, 21790, 23784);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 672, 21790, 23784);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 672, 21790, 23784);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 672, 21790, 23784);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 672, 21790, 23784);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 672, 21790, 23784);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 672, 21790, 23784);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 672, 21790, 23784);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 672, 21790, 23784);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 672, 21790, 23784);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 672, 21790, 23784);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 672, 21790, 23784);
            String result = CallChecker.varInit(actions, "result", 673, 22345, 22368);
            if (result == null) {
                StringBuffer sb = CallChecker.varInit(new StringBuffer(), "sb", 675, 22397, 22433);
                int mask = CallChecker.varInit(((int) (this.action_mask)), "mask", 677, 22439, 22461);
                if ((mask & (AdminPermission.ACTION_CLASS)) == (AdminPermission.ACTION_CLASS)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 679, 22515, 22516)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 679, 22515, 22516);
                        CallChecker.isCalled(sb, StringBuffer.class, 679, 22515, 22516).append(AdminPermission.CLASS);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 680, 22537, 22538)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 680, 22537, 22538);
                        CallChecker.isCalled(sb, StringBuffer.class, 680, 22537, 22538).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_EXECUTE)) == (AdminPermission.ACTION_EXECUTE)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 684, 22615, 22616)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 684, 22615, 22616);
                        CallChecker.isCalled(sb, StringBuffer.class, 684, 22615, 22616).append(AdminPermission.EXECUTE);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 685, 22639, 22640)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 685, 22639, 22640);
                        CallChecker.isCalled(sb, StringBuffer.class, 685, 22639, 22640).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_EXTENSIONLIFECYCLE)) == (AdminPermission.ACTION_EXTENSIONLIFECYCLE)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 689, 22739, 22740)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 689, 22739, 22740);
                        CallChecker.isCalled(sb, StringBuffer.class, 689, 22739, 22740).append(AdminPermission.EXTENSIONLIFECYCLE);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 690, 22774, 22775)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 690, 22774, 22775);
                        CallChecker.isCalled(sb, StringBuffer.class, 690, 22774, 22775).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_LIFECYCLE)) == (AdminPermission.ACTION_LIFECYCLE)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 694, 22856, 22857)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 694, 22856, 22857);
                        CallChecker.isCalled(sb, StringBuffer.class, 694, 22856, 22857).append(AdminPermission.LIFECYCLE);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 695, 22882, 22883)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 695, 22882, 22883);
                        CallChecker.isCalled(sb, StringBuffer.class, 695, 22882, 22883).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_LISTENER)) == (AdminPermission.ACTION_LISTENER)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 699, 22962, 22963)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 699, 22962, 22963);
                        CallChecker.isCalled(sb, StringBuffer.class, 699, 22962, 22963).append(AdminPermission.LISTENER);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 700, 22987, 22988)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 700, 22987, 22988);
                        CallChecker.isCalled(sb, StringBuffer.class, 700, 22987, 22988).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_METADATA)) == (AdminPermission.ACTION_METADATA)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 704, 23067, 23068)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 704, 23067, 23068);
                        CallChecker.isCalled(sb, StringBuffer.class, 704, 23067, 23068).append(AdminPermission.METADATA);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 705, 23092, 23093)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 705, 23092, 23093);
                        CallChecker.isCalled(sb, StringBuffer.class, 705, 23092, 23093).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_RESOLVE)) == (AdminPermission.ACTION_RESOLVE)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 709, 23170, 23171)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 709, 23170, 23171);
                        CallChecker.isCalled(sb, StringBuffer.class, 709, 23170, 23171).append(AdminPermission.RESOLVE);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 710, 23194, 23195)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 710, 23194, 23195);
                        CallChecker.isCalled(sb, StringBuffer.class, 710, 23194, 23195).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_RESOURCE)) == (AdminPermission.ACTION_RESOURCE)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 714, 23274, 23275)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 714, 23274, 23275);
                        CallChecker.isCalled(sb, StringBuffer.class, 714, 23274, 23275).append(AdminPermission.RESOURCE);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 715, 23299, 23300)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 715, 23299, 23300);
                        CallChecker.isCalled(sb, StringBuffer.class, 715, 23299, 23300).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_STARTLEVEL)) == (AdminPermission.ACTION_STARTLEVEL)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 719, 23383, 23384)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 719, 23383, 23384);
                        CallChecker.isCalled(sb, StringBuffer.class, 719, 23383, 23384).append(AdminPermission.STARTLEVEL);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 720, 23410, 23411)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 720, 23410, 23411);
                        CallChecker.isCalled(sb, StringBuffer.class, 720, 23410, 23411).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_CONTEXT)) == (AdminPermission.ACTION_CONTEXT)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 724, 23488, 23489)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 724, 23488, 23489);
                        CallChecker.isCalled(sb, StringBuffer.class, 724, 23488, 23489).append(AdminPermission.CONTEXT);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 725, 23512, 23513)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 725, 23512, 23513);
                        CallChecker.isCalled(sb, StringBuffer.class, 725, 23512, 23513).append(',');
                    }
                }
                if ((mask & (AdminPermission.ACTION_WEAVE)) == (AdminPermission.ACTION_WEAVE)) {
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 729, 23586, 23587)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 729, 23586, 23587);
                        CallChecker.isCalled(sb, StringBuffer.class, 729, 23586, 23587).append(AdminPermission.WEAVE);
                    }
                    if (CallChecker.beforeDeref(sb, StringBuffer.class, 730, 23608, 23609)) {
                        sb = CallChecker.beforeCalled(sb, StringBuffer.class, 730, 23608, 23609);
                        CallChecker.isCalled(sb, StringBuffer.class, 730, 23608, 23609).append(',');
                    }
                }
                if (CallChecker.beforeDeref(sb, StringBuffer.class, 734, 23665, 23666)) {
                    sb = CallChecker.beforeCalled(sb, StringBuffer.class, 734, 23665, 23666);
                    if ((CallChecker.isCalled(sb, StringBuffer.class, 734, 23665, 23666).length()) > 0) {
                        if (CallChecker.beforeDeref(sb, StringBuffer.class, 735, 23701, 23702)) {
                            if (CallChecker.beforeDeref(sb, StringBuffer.class, 735, 23688, 23689)) {
                                sb = CallChecker.beforeCalled(sb, StringBuffer.class, 735, 23701, 23702);
                                sb = CallChecker.beforeCalled(sb, StringBuffer.class, 735, 23688, 23689);
                                CallChecker.isCalled(sb, StringBuffer.class, 735, 23688, 23689).setLength(((CallChecker.isCalled(sb, StringBuffer.class, 735, 23701, 23702).length()) - 1));
                            }
                        }
                    }
                }
                if (CallChecker.beforeDeref(sb, StringBuffer.class, 738, 23747, 23748)) {
                    sb = CallChecker.beforeCalled(sb, StringBuffer.class, 738, 23747, 23748);
                    actions = result = CallChecker.isCalled(sb, StringBuffer.class, 738, 23747, 23748).toString();
                    CallChecker.varAssign(this.actions, "this.actions", 738, 23728, 23760);
                    CallChecker.varAssign(result, "result", 738, 23738, 23759);
                }
            }
            return result;
        } catch (ForceReturn _bcornu_return_t) {
            return ((String) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context777.methodEnd();
        }
    }

    @Override
    public PermissionCollection newPermissionCollection() {
        MethodContext _bcornu_methode_context778 = new MethodContext(PermissionCollection.class);
        try {
            CallChecker.varInit(this, "this", 750, 23788, 24073);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 750, 23788, 24073);
            CallChecker.varInit(this.properties, "properties", 750, 23788, 24073);
            CallChecker.varInit(this.bundle, "bundle", 750, 23788, 24073);
            CallChecker.varInit(this.filter, "filter", 750, 23788, 24073);
            CallChecker.varInit(this.action_mask, "action_mask", 750, 23788, 24073);
            CallChecker.varInit(this.actions, "actions", 750, 23788, 24073);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 750, 23788, 24073);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 750, 23788, 24073);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 750, 23788, 24073);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 750, 23788, 24073);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 750, 23788, 24073);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 750, 23788, 24073);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 750, 23788, 24073);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 750, 23788, 24073);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 750, 23788, 24073);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 750, 23788, 24073);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 750, 23788, 24073);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 750, 23788, 24073);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 750, 23788, 24073);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 750, 23788, 24073);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 750, 23788, 24073);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 750, 23788, 24073);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 750, 23788, 24073);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 750, 23788, 24073);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 750, 23788, 24073);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 750, 23788, 24073);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 750, 23788, 24073);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 750, 23788, 24073);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 750, 23788, 24073);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 750, 23788, 24073);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 750, 23788, 24073);
            return new AdminPermissionCollection();
        } catch (ForceReturn _bcornu_return_t) {
            return ((PermissionCollection) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context778.methodEnd();
        }
    }

    @Override
    public boolean equals(Object obj) {
        MethodContext _bcornu_methode_context779 = new MethodContext(boolean.class);
        try {
            CallChecker.varInit(this, "this", 762, 24077, 24744);
            CallChecker.varInit(obj, "obj", 762, 24077, 24744);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 762, 24077, 24744);
            CallChecker.varInit(this.properties, "properties", 762, 24077, 24744);
            CallChecker.varInit(this.bundle, "bundle", 762, 24077, 24744);
            CallChecker.varInit(this.filter, "filter", 762, 24077, 24744);
            CallChecker.varInit(this.action_mask, "action_mask", 762, 24077, 24744);
            CallChecker.varInit(this.actions, "actions", 762, 24077, 24744);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 762, 24077, 24744);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 762, 24077, 24744);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 762, 24077, 24744);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 762, 24077, 24744);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 762, 24077, 24744);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 762, 24077, 24744);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 762, 24077, 24744);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 762, 24077, 24744);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 762, 24077, 24744);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 762, 24077, 24744);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 762, 24077, 24744);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 762, 24077, 24744);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 762, 24077, 24744);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 762, 24077, 24744);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 762, 24077, 24744);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 762, 24077, 24744);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 762, 24077, 24744);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 762, 24077, 24744);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 762, 24077, 24744);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 762, 24077, 24744);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 762, 24077, 24744);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 762, 24077, 24744);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 762, 24077, 24744);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 762, 24077, 24744);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 762, 24077, 24744);
            if (obj == (this)) {
                return true;
            }
            if (!(obj instanceof AdminPermission)) {
                return false;
            }
            AdminPermission ap = CallChecker.varInit(((AdminPermission) (obj)), "ap", 771, 24512, 24554);
            if (CallChecker.beforeDeref(ap, AdminPermission.class, 773, 24662, 24663)) {
                if (CallChecker.beforeDeref(ap, AdminPermission.class, 773, 24730, 24731)) {
                    if (((filter) == null) || (CallChecker.beforeDeref(filter, Filter.class, 773, 24716, 24721))) {
                        ap = CallChecker.beforeCalled(ap, AdminPermission.class, 773, 24582, 24583);
                        ap = CallChecker.beforeCalled(ap, AdminPermission.class, 773, 24613, 24614);
                        ap = CallChecker.beforeCalled(ap, AdminPermission.class, 773, 24662, 24663);
                        ap = CallChecker.beforeCalled(ap, AdminPermission.class, 773, 24696, 24697);
                        ap = CallChecker.beforeCalled(ap, AdminPermission.class, 773, 24730, 24731);
                        filter = CallChecker.beforeCalled(filter, Filter.class, 773, 24716, 24721);
                        return (((action_mask) == (CallChecker.isCalled(ap, AdminPermission.class, 773, 24582, 24583).action_mask)) && (((bundle) == (CallChecker.isCalled(ap, AdminPermission.class, 773, 24613, 24614).bundle)) || (((bundle) != null) && (CallChecker.isCalled(bundle, Bundle.class, 773, 24648, 24653).equals(CallChecker.isCalled(ap, AdminPermission.class, 773, 24662, 24663).bundle))))) && (((filter) == null) ? (CallChecker.isCalled(ap, AdminPermission.class, 773, 24696, 24697).filter) == null : CallChecker.isCalled(filter, Filter.class, 773, 24716, 24721).equals(CallChecker.isCalled(ap, AdminPermission.class, 773, 24730, 24731).filter));
                    }else
                        throw new AbnormalExecutionError();
                    
                }else
                    throw new AbnormalExecutionError();
                
            }else
                throw new AbnormalExecutionError();
            
        } catch (ForceReturn _bcornu_return_t) {
            return ((Boolean) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context779.methodEnd();
        }
    }

    @Override
    public int hashCode() {
        MethodContext _bcornu_methode_context780 = new MethodContext(int.class);
        try {
            CallChecker.varInit(this, "this", 782, 24748, 25050);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 782, 24748, 25050);
            CallChecker.varInit(this.properties, "properties", 782, 24748, 25050);
            CallChecker.varInit(this.bundle, "bundle", 782, 24748, 25050);
            CallChecker.varInit(this.filter, "filter", 782, 24748, 25050);
            CallChecker.varInit(this.action_mask, "action_mask", 782, 24748, 25050);
            CallChecker.varInit(this.actions, "actions", 782, 24748, 25050);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 782, 24748, 25050);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 782, 24748, 25050);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 782, 24748, 25050);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 782, 24748, 25050);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 782, 24748, 25050);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 782, 24748, 25050);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 782, 24748, 25050);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 782, 24748, 25050);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 782, 24748, 25050);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 782, 24748, 25050);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 782, 24748, 25050);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 782, 24748, 25050);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 782, 24748, 25050);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 782, 24748, 25050);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 782, 24748, 25050);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 782, 24748, 25050);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 782, 24748, 25050);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 782, 24748, 25050);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 782, 24748, 25050);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 782, 24748, 25050);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 782, 24748, 25050);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 782, 24748, 25050);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 782, 24748, 25050);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 782, 24748, 25050);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 782, 24748, 25050);
            int h = CallChecker.init(int.class);
            if (CallChecker.beforeDeref(getName(), String.class, 783, 24912, 24920)) {
                h = (31 * 17) + (CallChecker.isCalled(getName(), String.class, 783, 24912, 24920).hashCode());
                CallChecker.varAssign(h, "h", 783, 24912, 24920);
            }
            final String npe_invocation_var244 = getActions();
            if (CallChecker.beforeDeref(npe_invocation_var244, String.class, 784, 24949, 24960)) {
                h = (31 * h) + (CallChecker.isCalled(npe_invocation_var244, String.class, 784, 24949, 24960).hashCode());
                CallChecker.varAssign(h, "h", 784, 24936, 24972);
            }
            if ((bundle) != null) {
                h = (31 * h) + (bundle.hashCode());
                CallChecker.varAssign(h, "h", 786, 25001, 25031);
            }
            return h;
        } catch (ForceReturn _bcornu_return_t) {
            return ((Integer) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context780.methodEnd();
        }
    }

    private synchronized void writeObject(ObjectOutputStream s) throws IOException {
        MethodContext _bcornu_methode_context781 = new MethodContext(void.class);
        try {
            CallChecker.varInit(this, "this", 796, 25054, 25598);
            CallChecker.varInit(s, "s", 796, 25054, 25598);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 796, 25054, 25598);
            CallChecker.varInit(this.properties, "properties", 796, 25054, 25598);
            CallChecker.varInit(this.bundle, "bundle", 796, 25054, 25598);
            CallChecker.varInit(this.filter, "filter", 796, 25054, 25598);
            CallChecker.varInit(this.action_mask, "action_mask", 796, 25054, 25598);
            CallChecker.varInit(this.actions, "actions", 796, 25054, 25598);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 796, 25054, 25598);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 796, 25054, 25598);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 796, 25054, 25598);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 796, 25054, 25598);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 796, 25054, 25598);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 796, 25054, 25598);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 796, 25054, 25598);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 796, 25054, 25598);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 796, 25054, 25598);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 796, 25054, 25598);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 796, 25054, 25598);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 796, 25054, 25598);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 796, 25054, 25598);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 796, 25054, 25598);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 796, 25054, 25598);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 796, 25054, 25598);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 796, 25054, 25598);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 796, 25054, 25598);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 796, 25054, 25598);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 796, 25054, 25598);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 796, 25054, 25598);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 796, 25054, 25598);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 796, 25054, 25598);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 796, 25054, 25598);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 796, 25054, 25598);
            if ((bundle) != null) {
                throw new NotSerializableException("cannot serialize");
            }
            if ((actions) == null)
                getActions();
            
            if (CallChecker.beforeDeref(s, ObjectOutputStream.class, 804, 25573, 25573)) {
                s = CallChecker.beforeCalled(s, ObjectOutputStream.class, 804, 25573, 25573);
                CallChecker.isCalled(s, ObjectOutputStream.class, 804, 25573, 25573).defaultWriteObject();
            }
        } catch (ForceReturn _bcornu_return_t) {
            _bcornu_return_t.getDecision().getValue();
            return ;
        } finally {
            _bcornu_methode_context781.methodEnd();
        }
    }

    private synchronized void readObject(ObjectInputStream s) throws IOException, ClassNotFoundException {
        MethodContext _bcornu_methode_context782 = new MethodContext(void.class);
        try {
            CallChecker.varInit(this, "this", 811, 25602, 25951);
            CallChecker.varInit(s, "s", 811, 25602, 25951);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 811, 25602, 25951);
            CallChecker.varInit(this.properties, "properties", 811, 25602, 25951);
            CallChecker.varInit(this.bundle, "bundle", 811, 25602, 25951);
            CallChecker.varInit(this.filter, "filter", 811, 25602, 25951);
            CallChecker.varInit(this.action_mask, "action_mask", 811, 25602, 25951);
            CallChecker.varInit(this.actions, "actions", 811, 25602, 25951);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 811, 25602, 25951);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 811, 25602, 25951);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 811, 25602, 25951);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 811, 25602, 25951);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 811, 25602, 25951);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 811, 25602, 25951);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 811, 25602, 25951);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 811, 25602, 25951);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 811, 25602, 25951);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 811, 25602, 25951);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 811, 25602, 25951);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 811, 25602, 25951);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 811, 25602, 25951);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 811, 25602, 25951);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 811, 25602, 25951);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 811, 25602, 25951);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 811, 25602, 25951);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 811, 25602, 25951);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 811, 25602, 25951);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 811, 25602, 25951);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 811, 25602, 25951);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 811, 25602, 25951);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 811, 25602, 25951);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 811, 25602, 25951);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 811, 25602, 25951);
            if (CallChecker.beforeDeref(s, ObjectInputStream.class, 813, 25863, 25863)) {
                s = CallChecker.beforeCalled(s, ObjectInputStream.class, 813, 25863, 25863);
                CallChecker.isCalled(s, ObjectInputStream.class, 813, 25863, 25863).defaultReadObject();
            }
            setTransients(AdminPermission.parseFilter(getName()), AdminPermission.parseActions(actions));
        } catch (ForceReturn _bcornu_return_t) {
            _bcornu_return_t.getDecision().getValue();
            return ;
        } finally {
            _bcornu_methode_context782.methodEnd();
        }
    }

    private Map<String, Object> getProperties() {
        MethodContext _bcornu_methode_context784 = new MethodContext(Map.class);
        try {
            CallChecker.varInit(this, "this", 828, 25955, 27375);
            CallChecker.varInit(recurse, "org.osgi.framework.AdminPermission.recurse", 828, 25955, 27375);
            CallChecker.varInit(this.properties, "properties", 828, 25955, 27375);
            CallChecker.varInit(this.bundle, "bundle", 828, 25955, 27375);
            CallChecker.varInit(this.filter, "filter", 828, 25955, 27375);
            CallChecker.varInit(this.action_mask, "action_mask", 828, 25955, 27375);
            CallChecker.varInit(this.actions, "actions", 828, 25955, 27375);
            CallChecker.varInit(ACTION_NONE, "org.osgi.framework.AdminPermission.ACTION_NONE", 828, 25955, 27375);
            CallChecker.varInit(ACTION_ALL, "org.osgi.framework.AdminPermission.ACTION_ALL", 828, 25955, 27375);
            CallChecker.varInit(ACTION_WEAVE, "org.osgi.framework.AdminPermission.ACTION_WEAVE", 828, 25955, 27375);
            CallChecker.varInit(ACTION_CONTEXT, "org.osgi.framework.AdminPermission.ACTION_CONTEXT", 828, 25955, 27375);
            CallChecker.varInit(ACTION_EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_EXTENSIONLIFECYCLE", 828, 25955, 27375);
            CallChecker.varInit(ACTION_STARTLEVEL, "org.osgi.framework.AdminPermission.ACTION_STARTLEVEL", 828, 25955, 27375);
            CallChecker.varInit(ACTION_RESOURCE, "org.osgi.framework.AdminPermission.ACTION_RESOURCE", 828, 25955, 27375);
            CallChecker.varInit(ACTION_RESOLVE, "org.osgi.framework.AdminPermission.ACTION_RESOLVE", 828, 25955, 27375);
            CallChecker.varInit(ACTION_METADATA, "org.osgi.framework.AdminPermission.ACTION_METADATA", 828, 25955, 27375);
            CallChecker.varInit(ACTION_LISTENER, "org.osgi.framework.AdminPermission.ACTION_LISTENER", 828, 25955, 27375);
            CallChecker.varInit(ACTION_LIFECYCLE, "org.osgi.framework.AdminPermission.ACTION_LIFECYCLE", 828, 25955, 27375);
            CallChecker.varInit(ACTION_EXECUTE, "org.osgi.framework.AdminPermission.ACTION_EXECUTE", 828, 25955, 27375);
            CallChecker.varInit(ACTION_CLASS, "org.osgi.framework.AdminPermission.ACTION_CLASS", 828, 25955, 27375);
            CallChecker.varInit(WEAVE, "org.osgi.framework.AdminPermission.WEAVE", 828, 25955, 27375);
            CallChecker.varInit(CONTEXT, "org.osgi.framework.AdminPermission.CONTEXT", 828, 25955, 27375);
            CallChecker.varInit(STARTLEVEL, "org.osgi.framework.AdminPermission.STARTLEVEL", 828, 25955, 27375);
            CallChecker.varInit(RESOURCE, "org.osgi.framework.AdminPermission.RESOURCE", 828, 25955, 27375);
            CallChecker.varInit(RESOLVE, "org.osgi.framework.AdminPermission.RESOLVE", 828, 25955, 27375);
            CallChecker.varInit(METADATA, "org.osgi.framework.AdminPermission.METADATA", 828, 25955, 27375);
            CallChecker.varInit(LISTENER, "org.osgi.framework.AdminPermission.LISTENER", 828, 25955, 27375);
            CallChecker.varInit(LIFECYCLE, "org.osgi.framework.AdminPermission.LIFECYCLE", 828, 25955, 27375);
            CallChecker.varInit(EXTENSIONLIFECYCLE, "org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE", 828, 25955, 27375);
            CallChecker.varInit(EXECUTE, "org.osgi.framework.AdminPermission.EXECUTE", 828, 25955, 27375);
            CallChecker.varInit(CLASS, "org.osgi.framework.AdminPermission.CLASS", 828, 25955, 27375);
            CallChecker.varInit(serialVersionUID, "org.osgi.framework.AdminPermission.serialVersionUID", 828, 25955, 27375);
            Map<String, Object> result = CallChecker.varInit(properties, "result", 829, 26402, 26441);
            if (result != null) {
                return result;
            }
            final Object mark = CallChecker.varInit(CallChecker.isCalled(AdminPermission.recurse, ThreadLocal.class, 838, 26691, 26697).get(), "mark", 838, 26491, 26704);
            if (mark == (bundle)) {
                return null;
            }
            if (CallChecker.beforeDeref(AdminPermission.recurse, ThreadLocal.class, 842, 26752, 26758)) {
                CallChecker.isCalled(AdminPermission.recurse, ThreadLocal.class, 842, 26752, 26758).set(bundle);
            }
            TryContext _bcornu_try_context_276 = new TryContext(276, AdminPermission.class);
            try {
                final Map<String, Object> map = CallChecker.varInit(new HashMap<String, Object>(4), "map", 844, 26784, 26846);
                AccessController.doPrivileged(new PrivilegedAction<Void>() {
                    public Void run() {
                        MethodContext _bcornu_methode_context783 = new MethodContext(Void.class);
                        try {
                            CallChecker.varInit(this, "this", 846, 26916, 27297);
                            if (CallChecker.beforeDeref(bundle, Bundle.class, 847, 26964, 26969)) {
                                if (CallChecker.beforeDeref(map, Map.class, 847, 26941, 26943)) {
                                    CallChecker.isCalled(map, Map.class, 847, 26941, 26943).put("id", new Long(CallChecker.isCalled(bundle, Bundle.class, 847, 26964, 26969).getBundleId()));
                                }
                            }
                            if (CallChecker.beforeDeref(bundle, Bundle.class, 848, 27013, 27018)) {
                                if (CallChecker.beforeDeref(map, Map.class, 848, 26993, 26995)) {
                                    CallChecker.isCalled(map, Map.class, 848, 26993, 26995).put("location", CallChecker.isCalled(bundle, Bundle.class, 848, 27013, 27018).getLocation());
                                }
                            }
                            String name = CallChecker.init(String.class);
                            if (CallChecker.beforeDeref(bundle, Bundle.class, 849, 27055, 27060)) {
                                name = CallChecker.isCalled(bundle, Bundle.class, 849, 27055, 27060).getSymbolicName();
                                CallChecker.varAssign(name, "name", 849, 27055, 27060);
                            }
                            if (name != null) {
                                if (CallChecker.beforeDeref(map, Map.class, 851, 27112, 27114)) {
                                    CallChecker.isCalled(map, Map.class, 851, 27112, 27114).put("name", name);
                                }
                            }
                            SignerProperty signer = CallChecker.varInit(new SignerProperty(bundle), "signer", 853, 27147, 27197);
                            if (CallChecker.beforeDeref(signer, SignerProperty.class, 854, 27208, 27213)) {
                                signer = CallChecker.beforeCalled(signer, SignerProperty.class, 854, 27208, 27213);
                                if (CallChecker.isCalled(signer, SignerProperty.class, 854, 27208, 27213).isBundleSigned()) {
                                    if (CallChecker.beforeDeref(map, Map.class, 855, 27241, 27243)) {
                                        CallChecker.isCalled(map, Map.class, 855, 27241, 27243).put("signer", signer);
                                    }
                                }
                            }
                            return null;
                        } catch (ForceReturn _bcornu_return_t) {
                            return ((Void) (_bcornu_return_t.getDecision().getValue()));
                        } finally {
                            _bcornu_methode_context783.methodEnd();
                        }
                    }
                });
                return properties = map;
            } finally {
                _bcornu_try_context_276.finallyStart(276);
                if (CallChecker.beforeDeref(AdminPermission.recurse, ThreadLocal.class, 862, 27351, 27357)) {
                    CallChecker.isCalled(AdminPermission.recurse, ThreadLocal.class, 862, 27351, 27357).set(null);
                }
            }
        } catch (ForceReturn _bcornu_return_t) {
            return ((Map<String, Object>) (_bcornu_return_t.getDecision().getValue()));
        } finally {
            _bcornu_methode_context784.methodEnd();
        }
    }
}

