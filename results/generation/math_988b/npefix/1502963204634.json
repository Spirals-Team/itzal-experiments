{"endInit":1502963201187,"executions":[{"result":{"type":"test","success":true},"startDate":1502963203130,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.MINUS_J.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_J"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203249,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203249,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.MINUS_K.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_K"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203269,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203269,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.PLUS_J.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_J"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203289,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203334,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.PLUS_I.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_I"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203353,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203289,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.PLUS_K.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_K"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203334,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203353,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.POSITIVE_INFINITY.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"POSITIVE_INFINITY"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203373,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203374,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return direction.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Variable","variableName":"direction"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203419,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203439,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.MINUS_I.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_I"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203463,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203419,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.NEGATIVE_INFINITY.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"NEGATIVE_INFINITY"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203439,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203514,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.NaN.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"NaN"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203534,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203464,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return Vector3D.ZERO.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"ZERO"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203514,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203534,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return zero.subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Variable","variableName":"zero"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963203551,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203551,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.MINUS_J;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_J"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203591,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203591,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.MINUS_K;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_K"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203604,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203604,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.PLUS_J;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_J"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203615,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203652,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.PLUS_I;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_I"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203665,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203616,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.PLUS_K;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_K"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203652,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203665,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.POSITIVE_INFINITY;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"POSITIVE_INFINITY"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203677,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203678,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = direction;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Variable","variableName":"direction"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203717,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203730,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.MINUS_I;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_I"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203741,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203717,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.NEGATIVE_INFINITY;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"NEGATIVE_INFINITY"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203729,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203781,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.NaN;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"NaN"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203794,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203742,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = Vector3D.ZERO;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"ZERO"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203781,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203794,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = zero;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Variable","variableName":"zero"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963203805,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203806,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return new Vector3D(0.0, 0.0).subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"New","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","parameters":[{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"}],"parameterTypes":["double","double"]},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"NEW"}],"endDate":1502963203848,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203848,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,7 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point == null) {\n+            return new Vector3D(0.0, 0.0, 0.0).subtract(zero).dotProduct(direction);\n+        } else {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"New","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","parameters":[{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"}],"parameterTypes":["double","double","double"]},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"NEW"}],"endDate":1502963203865,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203866,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = new Vector3D(0.0, 0.0);\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"New","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","parameters":[{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"}],"parameterTypes":["double","double"]},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"NEW"}],"endDate":1502963203879,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:135)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203879,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            point = new Vector3D(0.0, 0.0, 0.0);\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"New","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","parameters":[{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"}],"parameterTypes":["double","double","double"]},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"NEW"}],"endDate":1502963203917,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:141)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test","success":false},"startDate":1502963203917,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,3 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n-        return point.subtract(zero).dotProduct(direction);\n+        if (point != null) {\n+            return point.subtract(zero).dotProduct(direction);\n+        }\n     }\n","decisions":[{"nbUse":1,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Primitive","value":false,"class":"class java.lang.Boolean"},"epsilon":0,"strategy":"Strat3","used":true,"decisionType":"NEW"}],"endDate":1502963203929,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203929,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            return 0.0;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":4,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},"epsilon":0,"strategy":"Strat4 NEW","used":true,"decisionType":"NEW"}],"endDate":1502963203945,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203945,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            return -1.0;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":4,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Primitive","value":-1,"class":"class java.lang.Double"},"epsilon":0,"strategy":"Strat4 NEW","used":true,"decisionType":"NEW"}],"endDate":1502963203986,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963203986,"locations":[{"sourceEnd":4569,"executionCount":0,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565}],"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"--- /Line.java\n+++ /Line.java\n@@ -113,2 +113,5 @@\n     public double getAbscissa(final Vector3D point) {\n+        if (point == null) {\n+            return 1.0;\n+        }\n         return point.subtract(zero).dotProduct(direction);\n","decisions":[{"nbUse":4,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Primitive","value":1,"class":"class java.lang.Double"},"epsilon":0,"strategy":"Strat4 NEW","used":true,"decisionType":"NEW"}],"endDate":1502963204002,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testIntersectionNotIntersecting(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:321)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:134)\n    at org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:172)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:96)\n    at org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test","success":false},"startDate":1502963204002,"test":{"name":"testIntersectionNotIntersecting","class":"org.apache.commons.math3.geometry.euclidean.threed.SubLineTest"},"diff":"","endDate":1502963204013,"metadata":{"seed":10,"strategy_selection":"exploration"}}],"start":1502963203119,"searchSpace":[{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Variable","variableName":"zero"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"NaN"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"ZERO"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_I"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"NEGATIVE_INFINITY"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Variable","variableName":"direction"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"POSITIVE_INFINITY"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_I"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_I"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"ZERO"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"NaN"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Variable","variableName":"zero"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"New","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","parameters":[{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"}],"parameterTypes":["double","double"]},"epsilon":0,"strategy":"Strat2A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"New","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","parameters":[{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"}],"parameterTypes":["double","double","double"]},"epsilon":0,"strategy":"Strat2A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"New","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","parameters":[{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"}],"parameterTypes":["double","double"]},"epsilon":0,"strategy":"Strat2B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"New","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","parameters":[{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"}],"parameterTypes":["double","double","double"]},"epsilon":0,"strategy":"Strat2B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Primitive","value":false,"class":"class java.lang.Boolean"},"epsilon":0,"strategy":"Strat3","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Primitive","value":0,"class":"class java.lang.Double"},"epsilon":0,"strategy":"Strat4 NEW","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Primitive","value":-1,"class":"class java.lang.Double"},"epsilon":0,"strategy":"Strat4 NEW","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Primitive","value":1,"class":"class java.lang.Double"},"epsilon":0,"strategy":"Strat4 NEW","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"NEGATIVE_INFINITY"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"Variable","variableName":"direction"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"POSITIVE_INFINITY"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_I"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_K"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_J"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_K"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":8,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_J"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_J"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"MINUS_K"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_J"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":4569,"line":114,"class":"org.apache.commons.math3.geometry.euclidean.threed.Line","sourceStart":4565},"value":{"instanceType":"StaticVariable","class":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D","fieldName":"PLUS_K"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"}],"end":1502963204374}