{"endInit":1502963728125,"executions":[{"result":{"error":"testMath290(SimplexSolverTest): unbounded solution\nclass org.apache.commons.math.optimization.linear.UnboundedSolutionException: unbounded solution\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doIteration(SimplexSolver.java:126)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.solvePhase1(SimplexSolver.java:246)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:276)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731386,"locations":[{"sourceEnd":10318,"executionCount":0,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261}],"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = numArtificialVariables;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numArtificialVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963731473,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963731500,"locations":[{"sourceEnd":10318,"executionCount":0,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261}],"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = numDecisionVariables;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numDecisionVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963731559,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): unbounded solution\nclass org.apache.commons.math.optimization.linear.UnboundedSolutionException: unbounded solution\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doIteration(SimplexSolver.java:126)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.solvePhase1(SimplexSolver.java:246)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:276)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731473,"locations":[{"sourceEnd":10318,"executionCount":0,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261}],"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = numSlackVariables;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numSlackVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"}],"endDate":1502963731500,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:495)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731559,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,7 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            Integer basicRow = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (basicRow == null) {\n+                basicRow = numArtificialVariables;\n+            }\n+            int row = basicRow;\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numArtificialVariables"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963731571,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:495)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731609,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,7 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            Integer basicRow = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (basicRow == null) {\n+                basicRow = numDecisionVariables;\n+            }\n+            int row = basicRow;\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numDecisionVariables"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963731630,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:495)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731572,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,7 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            Integer basicRow = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (basicRow == null) {\n+                basicRow = numSlackVariables;\n+            }\n+            int row = basicRow;\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numSlackVariables"},"epsilon":0,"strategy":"Strat1B","used":true,"decisionType":"NEW"}],"endDate":1502963731609,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): no entry at indices (-1, 0) in a 3x7 matrix\nclass org.apache.commons.math.linear.MatrixIndexException: no entry at indices (-1, 0) in a 3x7 matrix\n    at org.apache.commons.math.linear.Array2DRowRealMatrix.getEntry(Array2DRowRealMatrix.java:356)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.subtractRow(SimplexTableau.java:815)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:498)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\n\n","type":"test","success":false},"startDate":1502963731655,"locations":[{"sourceEnd":10318,"executionCount":0,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261}],"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = -1;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":-1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"NEW"}],"endDate":1502963731674,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): unbounded solution\nclass org.apache.commons.math.optimization.linear.UnboundedSolutionException: unbounded solution\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doIteration(SimplexSolver.java:126)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.solvePhase1(SimplexSolver.java:246)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:276)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731630,"locations":[{"sourceEnd":10318,"executionCount":0,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261}],"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = 1;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"NEW"}],"endDate":1502963731655,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963731674,"locations":[{"sourceEnd":10318,"executionCount":0,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261}],"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = 0;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":0,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"NEW"}],"endDate":1502963731761,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:495)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731773,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,7 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            Integer basicRow = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (basicRow == null) {\n+                basicRow = -1;\n+            }\n+            int row = basicRow;\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":-1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"NEW"}],"endDate":1502963731784,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:495)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731784,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,7 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            Integer basicRow = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (basicRow == null) {\n+                basicRow = 0;\n+            }\n+            int row = basicRow;\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":0,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"NEW"}],"endDate":1502963731796,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:495)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1502963731761,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,7 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            Integer basicRow = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (basicRow == null) {\n+                basicRow = 1;\n+            }\n+            int row = basicRow;\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"NEW"}],"endDate":1502963731772,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963731796,"locations":[{"sourceEnd":10318,"executionCount":0,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261}],"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,3 +248,5 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) != null) {\n+                int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":false,"class":"class java.lang.Boolean"},"epsilon":0,"strategy":"Strat3","used":true,"decisionType":"NEW"}],"endDate":1502963731868,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"type":"test","success":true},"startDate":1502963731868,"locations":[{"sourceEnd":10318,"executionCount":0,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261}],"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /SimplexTableau.java\n+++ /SimplexTableau.java\n@@ -248,2 +248,5 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                return null;\n+            }\n             int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n","decisions":[{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":"null","class":"null"},"epsilon":0,"strategy":"Strat4 VOID","used":true,"decisionType":"NEW"}],"endDate":1502963731895,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:321)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:494)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test","success":false},"startDate":1502963731896,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"","endDate":1502963731906,"metadata":{"seed":10,"strategy_selection":"exploration"}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:321)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:494)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:69)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:275)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:144)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test","success":false},"startDate":1502963731906,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"","endDate":1502963731916,"metadata":{"seed":10,"strategy_selection":"exploration"}}],"start":1502963731376,"searchSpace":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":0,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":-1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":"null","class":"null"},"epsilon":0,"strategy":"Strat4 VOID","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":false,"class":"class java.lang.Boolean"},"epsilon":0,"strategy":"Strat3","used":false,"decisionType":"RANDOM"},{"nbUse":1,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numArtificialVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"NEW"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numSlackVariables"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numDecisionVariables"},"epsilon":0,"strategy":"Strat1A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numArtificialVariables"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numSlackVariables"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numDecisionVariables"},"epsilon":0,"strategy":"Strat1B","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":-1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":0,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":false,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2B","used":false,"decisionType":"RANDOM"}],"end":1502963732272}